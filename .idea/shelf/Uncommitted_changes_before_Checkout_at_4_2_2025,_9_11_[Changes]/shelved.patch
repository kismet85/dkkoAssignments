Index: Decision_trees_and_Random_forests.ipynb
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\n \"cells\": [\n  {\n   \"metadata\": {},\n   \"cell_type\": \"markdown\",\n   \"source\": [\n    \"Phishing Website Classification\\n\",\n    \"\\n\",\n    \" In this notebook, we aim to predict whether a website is a phishing site or not based on a set of easily obtainable features. We will:\\n\",\n    \" \\n\",\n    \" - Build a **Decision Tree** for a transparent, human-readable model.\\n\",\n    \" - Build a **Random Forest** for improved predictive performance.\\n\",\n    \" \\n\",\n    \" We follow the **CRISP-DM process**:\\n\",\n    \" 1. **Business Understanding:**  \\n\",\n    \"    - Goal: Create an automated system to warn users about potential phishing sites.\\n\",\n    \"    - Impact: Prevent users from falling victim to phishing scams.\\n\",\n    \" \\n\",\n    \" 2. **Data Understanding:**  \\n\",\n    \"    - We use the Phishing Websites dataset from the UCI Repository.\\n\",\n    \"    - The target variable `result` uses `1` for phishing sites and `-1` for legitimate sites.\\n\",\n    \" \\n\",\n    \" 3. **Data Preparation:**  \\n\",\n    \"    - We load the dataset and split it into training and testing sets.\\n\",\n    \" \\n\",\n    \" 4. **Modeling:**  \\n\",\n    \"    - **Part 1:** Decision Tree with maximum depth of 3.\\n\",\n    \"    - **Part 2:** Random Forest with 100 estimators and cross-validation.\\n\",\n    \" \\n\",\n    \" 5. **Evaluation:**  \\n\",\n    \"    - We will evaluate models using accuracy, confusion matrices, and a classification report.\\n\",\n    \"  6. **Deployment:**  \\n\",\n    \"   - For the Decision Tree, we provide clear instructions for an internet analyst to manually assess website legitimacy.\\n\",\n    \"   - For the Random Forest, we discuss potential hyperparameter tuning and performance improvements.\\n\",\n    \"\\n\",\n    \"Let's begin by importing our libraries and loading the data.Part 1: Decision tree\\n\",\n    \"\\n\",\n    \"Your initial goal is to construct a small yet useful decision tree that predicts whether a website is a phishing site or not.\\n\",\n    \"\\n\",\n    \"The outcome should contain the following:\\n\",\n    \"\\n\",\n    \"An image of the final decision tree.\\n\",\n    \"Evaluation metrics for the decision tree.\\n\",\n    \"Written instructions for an internet analyst to manually make the decision of whether the website is likely to be a phishing site or not. The instructions must match one-to-one with your decision tree, and be written in a way that is understandable to an engineer who is aware of the basics of internet technologies.\"\n   ],\n   \"id\": \"139ba1401f3d6edb\"\n  },\n  {\n   \"cell_type\": \"code\",\n   \"id\": \"initial_id\",\n   \"metadata\": {\n    \"collapsed\": true,\n    \"ExecuteTime\": {\n     \"end_time\": \"2025-01-30T13:14:40.040474Z\",\n     \"start_time\": \"2025-01-30T13:14:40.005421Z\"\n    }\n   },\n   \"source\": [\n    \"\\n\",\n    \"import pandas as pd\\n\",\n    \"from sklearn.preprocessing import StandardScaler\\n\",\n    \"from sklearn.preprocessing import StandardScaler\\n\",\n    \"from sklearn.model_selection import train_test_split\\n\",\n    \"import seaborn as sns\\n\",\n    \"import matplotlib.pyplot as plt\\n\",\n    \"\\n\",\n    \"from sklearn.tree import DecisionTreeClassifier\\n\",\n    \"from sklearn.metrics import classification_report, accuracy_score\\n\",\n    \"from sklearn import tree\\n\",\n    \"import matplotlib.pyplot as plt\\n\",\n    \"\\n\",\n    \"\\n\",\n    \"from ucimlrepo import fetch_ucirepo\\n\",\n    \"\\n\",\n    \"df = pd.read_csv('phishing_websites.csv')\\n\",\n    \"\\n\",\n    \"df.loc[:]\"\n   ],\n   \"outputs\": [\n    {\n     \"data\": {\n      \"text/plain\": [\n       \"       having_ip_address  url_length  shortining_service  having_at_symbol  \\\\\\n\",\n       \"0                     -1           1                   1                 1   \\n\",\n       \"1                      1           1                   1                 1   \\n\",\n       \"2                      1           0                   1                 1   \\n\",\n       \"3                      1           0                   1                 1   \\n\",\n       \"4                      1           0                  -1                 1   \\n\",\n       \"...                  ...         ...                 ...               ...   \\n\",\n       \"11050                  1          -1                   1                -1   \\n\",\n       \"11051                 -1           1                   1                -1   \\n\",\n       \"11052                  1          -1                   1                 1   \\n\",\n       \"11053                 -1          -1                   1                 1   \\n\",\n       \"11054                 -1          -1                   1                 1   \\n\",\n       \"\\n\",\n       \"       double_slash_redirecting  prefix_suffix  having_sub_domain  \\\\\\n\",\n       \"0                            -1             -1                 -1   \\n\",\n       \"1                             1             -1                  0   \\n\",\n       \"2                             1             -1                 -1   \\n\",\n       \"3                             1             -1                 -1   \\n\",\n       \"4                             1             -1                  1   \\n\",\n       \"...                         ...            ...                ...   \\n\",\n       \"11050                         1              1                  1   \\n\",\n       \"11051                        -1             -1                  1   \\n\",\n       \"11052                         1             -1                  1   \\n\",\n       \"11053                         1             -1                 -1   \\n\",\n       \"11054                         1             -1                 -1   \\n\",\n       \"\\n\",\n       \"       sslfinal_state  domain_registration_length  favicon  ...  popupwindow  \\\\\\n\",\n       \"0                  -1                          -1        1  ...            1   \\n\",\n       \"1                   1                          -1        1  ...            1   \\n\",\n       \"2                  -1                          -1        1  ...            1   \\n\",\n       \"3                  -1                           1        1  ...            1   \\n\",\n       \"4                   1                          -1        1  ...           -1   \\n\",\n       \"...               ...                         ...      ...  ...          ...   \\n\",\n       \"11050               1                          -1       -1  ...           -1   \\n\",\n       \"11051              -1                          -1       -1  ...           -1   \\n\",\n       \"11052              -1                          -1        1  ...            1   \\n\",\n       \"11053              -1                           1       -1  ...           -1   \\n\",\n       \"11054              -1                           1        1  ...            1   \\n\",\n       \"\\n\",\n       \"       iframe  age_of_domain  dnsrecord  web_traffic  page_rank  google_index  \\\\\\n\",\n       \"0           1             -1         -1           -1         -1             1   \\n\",\n       \"1           1             -1         -1            0         -1             1   \\n\",\n       \"2           1              1         -1            1         -1             1   \\n\",\n       \"3           1             -1         -1            1         -1             1   \\n\",\n       \"4           1             -1         -1            0         -1             1   \\n\",\n       \"...       ...            ...        ...          ...        ...           ...   \\n\",\n       \"11050      -1              1          1           -1         -1             1   \\n\",\n       \"11051       1              1          1            1          1             1   \\n\",\n       \"11052       1              1          1            1         -1             1   \\n\",\n       \"11053       1              1          1            1         -1             1   \\n\",\n       \"11054       1             -1          1           -1         -1            -1   \\n\",\n       \"\\n\",\n       \"       links_pointing_to_page  statistical_report  result  \\n\",\n       \"0                           1                  -1      -1  \\n\",\n       \"1                           1                   1      -1  \\n\",\n       \"2                           0                  -1      -1  \\n\",\n       \"3                          -1                   1      -1  \\n\",\n       \"4                           1                   1       1  \\n\",\n       \"...                       ...                 ...     ...  \\n\",\n       \"11050                       1                   1       1  \\n\",\n       \"11051                      -1                   1      -1  \\n\",\n       \"11052                       0                   1      -1  \\n\",\n       \"11053                       1                   1      -1  \\n\",\n       \"11054                       1                  -1      -1  \\n\",\n       \"\\n\",\n       \"[11055 rows x 31 columns]\"\n      ],\n      \"text/html\": [\n       \"<div>\\n\",\n       \"<style scoped>\\n\",\n       \"    .dataframe tbody tr th:only-of-type {\\n\",\n       \"        vertical-align: middle;\\n\",\n       \"    }\\n\",\n       \"\\n\",\n       \"    .dataframe tbody tr th {\\n\",\n       \"        vertical-align: top;\\n\",\n       \"    }\\n\",\n       \"\\n\",\n       \"    .dataframe thead th {\\n\",\n       \"        text-align: right;\\n\",\n       \"    }\\n\",\n       \"</style>\\n\",\n       \"<table border=\\\"1\\\" class=\\\"dataframe\\\">\\n\",\n       \"  <thead>\\n\",\n       \"    <tr style=\\\"text-align: right;\\\">\\n\",\n       \"      <th></th>\\n\",\n       \"      <th>having_ip_address</th>\\n\",\n       \"      <th>url_length</th>\\n\",\n       \"      <th>shortining_service</th>\\n\",\n       \"      <th>having_at_symbol</th>\\n\",\n       \"      <th>double_slash_redirecting</th>\\n\",\n       \"      <th>prefix_suffix</th>\\n\",\n       \"      <th>having_sub_domain</th>\\n\",\n       \"      <th>sslfinal_state</th>\\n\",\n       \"      <th>domain_registration_length</th>\\n\",\n       \"      <th>favicon</th>\\n\",\n       \"      <th>...</th>\\n\",\n       \"      <th>popupwindow</th>\\n\",\n       \"      <th>iframe</th>\\n\",\n       \"      <th>age_of_domain</th>\\n\",\n       \"      <th>dnsrecord</th>\\n\",\n       \"      <th>web_traffic</th>\\n\",\n       \"      <th>page_rank</th>\\n\",\n       \"      <th>google_index</th>\\n\",\n       \"      <th>links_pointing_to_page</th>\\n\",\n       \"      <th>statistical_report</th>\\n\",\n       \"      <th>result</th>\\n\",\n       \"    </tr>\\n\",\n       \"  </thead>\\n\",\n       \"  <tbody>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>0</th>\\n\",\n       \"      <td>-1</td>\\n\",\n       \"      <td>1</td>\\n\",\n       \"      <td>1</td>\\n\",\n       \"      <td>1</td>\\n\",\n       \"      <td>-1</td>\\n\",\n       \"      <td>-1</td>\\n\",\n       \"      <td>-1</td>\\n\",\n       \"      <td>-1</td>\\n\",\n       \"      <td>-1</td>\\n\",\n       \"      <td>1</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>1</td>\\n\",\n       \"      <td>1</td>\\n\",\n       \"      <td>-1</td>\\n\",\n       \"      <td>-1</td>\\n\",\n       \"      <td>-1</td>\\n\",\n       \"      <td>-1</td>\\n\",\n       \"      <td>1</td>\\n\",\n       \"      <td>1</td>\\n\",\n       \"      <td>-1</td>\\n\",\n       \"      <td>-1</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>1</th>\\n\",\n       \"      <td>1</td>\\n\",\n       \"      <td>1</td>\\n\",\n       \"      <td>1</td>\\n\",\n       \"      <td>1</td>\\n\",\n       \"      <td>1</td>\\n\",\n       \"      <td>-1</td>\\n\",\n       \"      <td>0</td>\\n\",\n       \"      <td>1</td>\\n\",\n       \"      <td>-1</td>\\n\",\n       \"      <td>1</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>1</td>\\n\",\n       \"      <td>1</td>\\n\",\n       \"      <td>-1</td>\\n\",\n       \"      <td>-1</td>\\n\",\n       \"      <td>0</td>\\n\",\n       \"      <td>-1</td>\\n\",\n       \"      <td>1</td>\\n\",\n       \"      <td>1</td>\\n\",\n       \"      <td>1</td>\\n\",\n       \"      <td>-1</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2</th>\\n\",\n       \"      <td>1</td>\\n\",\n       \"      <td>0</td>\\n\",\n       \"      <td>1</td>\\n\",\n       \"      <td>1</td>\\n\",\n       \"      <td>1</td>\\n\",\n       \"      <td>-1</td>\\n\",\n       \"      <td>-1</td>\\n\",\n       \"      <td>-1</td>\\n\",\n       \"      <td>-1</td>\\n\",\n       \"      <td>1</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>1</td>\\n\",\n       \"      <td>1</td>\\n\",\n       \"      <td>1</td>\\n\",\n       \"      <td>-1</td>\\n\",\n       \"      <td>1</td>\\n\",\n       \"      <td>-1</td>\\n\",\n       \"      <td>1</td>\\n\",\n       \"      <td>0</td>\\n\",\n       \"      <td>-1</td>\\n\",\n       \"      <td>-1</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>3</th>\\n\",\n       \"      <td>1</td>\\n\",\n       \"      <td>0</td>\\n\",\n       \"      <td>1</td>\\n\",\n       \"      <td>1</td>\\n\",\n       \"      <td>1</td>\\n\",\n       \"      <td>-1</td>\\n\",\n       \"      <td>-1</td>\\n\",\n       \"      <td>-1</td>\\n\",\n       \"      <td>1</td>\\n\",\n       \"      <td>1</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>1</td>\\n\",\n       \"      <td>1</td>\\n\",\n       \"      <td>-1</td>\\n\",\n       \"      <td>-1</td>\\n\",\n       \"      <td>1</td>\\n\",\n       \"      <td>-1</td>\\n\",\n       \"      <td>1</td>\\n\",\n       \"      <td>-1</td>\\n\",\n       \"      <td>1</td>\\n\",\n       \"      <td>-1</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>4</th>\\n\",\n       \"      <td>1</td>\\n\",\n       \"      <td>0</td>\\n\",\n       \"      <td>-1</td>\\n\",\n       \"      <td>1</td>\\n\",\n       \"      <td>1</td>\\n\",\n       \"      <td>-1</td>\\n\",\n       \"      <td>1</td>\\n\",\n       \"      <td>1</td>\\n\",\n       \"      <td>-1</td>\\n\",\n       \"      <td>1</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>-1</td>\\n\",\n       \"      <td>1</td>\\n\",\n       \"      <td>-1</td>\\n\",\n       \"      <td>-1</td>\\n\",\n       \"      <td>0</td>\\n\",\n       \"      <td>-1</td>\\n\",\n       \"      <td>1</td>\\n\",\n       \"      <td>1</td>\\n\",\n       \"      <td>1</td>\\n\",\n       \"      <td>1</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>...</th>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>11050</th>\\n\",\n       \"      <td>1</td>\\n\",\n       \"      <td>-1</td>\\n\",\n       \"      <td>1</td>\\n\",\n       \"      <td>-1</td>\\n\",\n       \"      <td>1</td>\\n\",\n       \"      <td>1</td>\\n\",\n       \"      <td>1</td>\\n\",\n       \"      <td>1</td>\\n\",\n       \"      <td>-1</td>\\n\",\n       \"      <td>-1</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>-1</td>\\n\",\n       \"      <td>-1</td>\\n\",\n       \"      <td>1</td>\\n\",\n       \"      <td>1</td>\\n\",\n       \"      <td>-1</td>\\n\",\n       \"      <td>-1</td>\\n\",\n       \"      <td>1</td>\\n\",\n       \"      <td>1</td>\\n\",\n       \"      <td>1</td>\\n\",\n       \"      <td>1</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>11051</th>\\n\",\n       \"      <td>-1</td>\\n\",\n       \"      <td>1</td>\\n\",\n       \"      <td>1</td>\\n\",\n       \"      <td>-1</td>\\n\",\n       \"      <td>-1</td>\\n\",\n       \"      <td>-1</td>\\n\",\n       \"      <td>1</td>\\n\",\n       \"      <td>-1</td>\\n\",\n       \"      <td>-1</td>\\n\",\n       \"      <td>-1</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>-1</td>\\n\",\n       \"      <td>1</td>\\n\",\n       \"      <td>1</td>\\n\",\n       \"      <td>1</td>\\n\",\n       \"      <td>1</td>\\n\",\n       \"      <td>1</td>\\n\",\n       \"      <td>1</td>\\n\",\n       \"      <td>-1</td>\\n\",\n       \"      <td>1</td>\\n\",\n       \"      <td>-1</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>11052</th>\\n\",\n       \"      <td>1</td>\\n\",\n       \"      <td>-1</td>\\n\",\n       \"      <td>1</td>\\n\",\n       \"      <td>1</td>\\n\",\n       \"      <td>1</td>\\n\",\n       \"      <td>-1</td>\\n\",\n       \"      <td>1</td>\\n\",\n       \"      <td>-1</td>\\n\",\n       \"      <td>-1</td>\\n\",\n       \"      <td>1</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>1</td>\\n\",\n       \"      <td>1</td>\\n\",\n       \"      <td>1</td>\\n\",\n       \"      <td>1</td>\\n\",\n       \"      <td>1</td>\\n\",\n       \"      <td>-1</td>\\n\",\n       \"      <td>1</td>\\n\",\n       \"      <td>0</td>\\n\",\n       \"      <td>1</td>\\n\",\n       \"      <td>-1</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>11053</th>\\n\",\n       \"      <td>-1</td>\\n\",\n       \"      <td>-1</td>\\n\",\n       \"      <td>1</td>\\n\",\n       \"      <td>1</td>\\n\",\n       \"      <td>1</td>\\n\",\n       \"      <td>-1</td>\\n\",\n       \"      <td>-1</td>\\n\",\n       \"      <td>-1</td>\\n\",\n       \"      <td>1</td>\\n\",\n       \"      <td>-1</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>-1</td>\\n\",\n       \"      <td>1</td>\\n\",\n       \"      <td>1</td>\\n\",\n       \"      <td>1</td>\\n\",\n       \"      <td>1</td>\\n\",\n       \"      <td>-1</td>\\n\",\n       \"      <td>1</td>\\n\",\n       \"      <td>1</td>\\n\",\n       \"      <td>1</td>\\n\",\n       \"      <td>-1</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>11054</th>\\n\",\n       \"      <td>-1</td>\\n\",\n       \"      <td>-1</td>\\n\",\n       \"      <td>1</td>\\n\",\n       \"      <td>1</td>\\n\",\n       \"      <td>1</td>\\n\",\n       \"      <td>-1</td>\\n\",\n       \"      <td>-1</td>\\n\",\n       \"      <td>-1</td>\\n\",\n       \"      <td>1</td>\\n\",\n       \"      <td>1</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>1</td>\\n\",\n       \"      <td>1</td>\\n\",\n       \"      <td>-1</td>\\n\",\n       \"      <td>1</td>\\n\",\n       \"      <td>-1</td>\\n\",\n       \"      <td>-1</td>\\n\",\n       \"      <td>-1</td>\\n\",\n       \"      <td>1</td>\\n\",\n       \"      <td>-1</td>\\n\",\n       \"      <td>-1</td>\\n\",\n       \"    </tr>\\n\",\n       \"  </tbody>\\n\",\n       \"</table>\\n\",\n       \"<p>11055 rows × 31 columns</p>\\n\",\n       \"</div>\"\n      ]\n     },\n     \"execution_count\": 2,\n     \"metadata\": {},\n     \"output_type\": \"execute_result\"\n    }\n   ],\n   \"execution_count\": 2\n  },\n  {\n   \"metadata\": {},\n   \"cell_type\": \"markdown\",\n   \"source\": [\n    \"Data Preparation\\n\",\n    \" \\n\",\n    \" We split the dataset into features (X) and the target (y). The target variable `result` uses:\\n\",\n    \" - `1` for phishing sites\\n\",\n    \" - `-1` for legitimate sites\\n\",\n    \" Then we split into training (70%) and testing (30%) sets.\"\n   ],\n   \"id\": \"e93449e9220381a3\"\n  },\n  {\n   \"metadata\": {},\n   \"cell_type\": \"markdown\",\n   \"source\": \"ESIMALLINNUS\",\n   \"id\": \"b67eb8e9c6a8b3bf\"\n  },\n  {\n   \"metadata\": {\n    \"ExecuteTime\": {\n     \"end_time\": \"2025-01-30T13:14:40.089413Z\",\n     \"start_time\": \"2025-01-30T13:14:40.082762Z\"\n    }\n   },\n   \"cell_type\": \"code\",\n   \"source\": [\n    \"\\n\",\n    \"\\n\",\n    \"x = df.drop('result', axis=1)\\n\",\n    \"y = df['result']\\n\",\n    \"\\n\",\n    \"x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.3, random_state=42)\\n\",\n    \"print(x_train.shape, x_test.shape, y_train.shape, y_test.shape)\\n\"\n   ],\n   \"id\": \"59b4fc5a0be06a89\",\n   \"outputs\": [\n    {\n     \"name\": \"stdout\",\n     \"output_type\": \"stream\",\n     \"text\": [\n      \"(7738, 30) (3317, 30) (7738,) (3317,)\\n\"\n     ]\n    }\n   ],\n   \"execution_count\": 3\n  },\n  {\n   \"metadata\": {\n    \"ExecuteTime\": {\n     \"end_time\": \"2025-01-30T13:14:40.136983Z\",\n     \"start_time\": \"2025-01-30T13:14:40.125979Z\"\n    }\n   },\n   \"cell_type\": \"code\",\n   \"source\": [\n    \"model = DecisionTreeClassifier(max_depth=3, random_state=20)\\n\",\n    \"model.fit(x_train, y_train)\"\n   ],\n   \"id\": \"88a1f71ad87a57ef\",\n   \"outputs\": [\n    {\n     \"data\": {\n      \"text/plain\": [\n       \"DecisionTreeClassifier(max_depth=3, random_state=20)\"\n      ],\n      \"text/html\": [\n       \"<style>#sk-container-id-1 {\\n\",\n       \"  /* Definition of color scheme common for light and dark mode */\\n\",\n       \"  --sklearn-color-text: #000;\\n\",\n       \"  --sklearn-color-text-muted: #666;\\n\",\n       \"  --sklearn-color-line: gray;\\n\",\n       \"  /* Definition of color scheme for unfitted estimators */\\n\",\n       \"  --sklearn-color-unfitted-level-0: #fff5e6;\\n\",\n       \"  --sklearn-color-unfitted-level-1: #f6e4d2;\\n\",\n       \"  --sklearn-color-unfitted-level-2: #ffe0b3;\\n\",\n       \"  --sklearn-color-unfitted-level-3: chocolate;\\n\",\n       \"  /* Definition of color scheme for fitted estimators */\\n\",\n       \"  --sklearn-color-fitted-level-0: #f0f8ff;\\n\",\n       \"  --sklearn-color-fitted-level-1: #d4ebff;\\n\",\n       \"  --sklearn-color-fitted-level-2: #b3dbfd;\\n\",\n       \"  --sklearn-color-fitted-level-3: cornflowerblue;\\n\",\n       \"\\n\",\n       \"  /* Specific color for light theme */\\n\",\n       \"  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\\n\",\n       \"  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\\n\",\n       \"  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\\n\",\n       \"  --sklearn-color-icon: #696969;\\n\",\n       \"\\n\",\n       \"  @media (prefers-color-scheme: dark) {\\n\",\n       \"    /* Redefinition of color scheme for dark theme */\\n\",\n       \"    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\\n\",\n       \"    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\\n\",\n       \"    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\\n\",\n       \"    --sklearn-color-icon: #878787;\\n\",\n       \"  }\\n\",\n       \"}\\n\",\n       \"\\n\",\n       \"#sk-container-id-1 {\\n\",\n       \"  color: var(--sklearn-color-text);\\n\",\n       \"}\\n\",\n       \"\\n\",\n       \"#sk-container-id-1 pre {\\n\",\n       \"  padding: 0;\\n\",\n       \"}\\n\",\n       \"\\n\",\n       \"#sk-container-id-1 input.sk-hidden--visually {\\n\",\n       \"  border: 0;\\n\",\n       \"  clip: rect(1px 1px 1px 1px);\\n\",\n       \"  clip: rect(1px, 1px, 1px, 1px);\\n\",\n       \"  height: 1px;\\n\",\n       \"  margin: -1px;\\n\",\n       \"  overflow: hidden;\\n\",\n       \"  padding: 0;\\n\",\n       \"  position: absolute;\\n\",\n       \"  width: 1px;\\n\",\n       \"}\\n\",\n       \"\\n\",\n       \"#sk-container-id-1 div.sk-dashed-wrapped {\\n\",\n       \"  border: 1px dashed var(--sklearn-color-line);\\n\",\n       \"  margin: 0 0.4em 0.5em 0.4em;\\n\",\n       \"  box-sizing: border-box;\\n\",\n       \"  padding-bottom: 0.4em;\\n\",\n       \"  background-color: var(--sklearn-color-background);\\n\",\n       \"}\\n\",\n       \"\\n\",\n       \"#sk-container-id-1 div.sk-container {\\n\",\n       \"  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\\n\",\n       \"     but bootstrap.min.css set `[hidden] { display: none !important; }`\\n\",\n       \"     so we also need the `!important` here to be able to override the\\n\",\n       \"     default hidden behavior on the sphinx rendered scikit-learn.org.\\n\",\n       \"     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\\n\",\n       \"  display: inline-block !important;\\n\",\n       \"  position: relative;\\n\",\n       \"}\\n\",\n       \"\\n\",\n       \"#sk-container-id-1 div.sk-text-repr-fallback {\\n\",\n       \"  display: none;\\n\",\n       \"}\\n\",\n       \"\\n\",\n       \"div.sk-parallel-item,\\n\",\n       \"div.sk-serial,\\n\",\n       \"div.sk-item {\\n\",\n       \"  /* draw centered vertical line to link estimators */\\n\",\n       \"  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\\n\",\n       \"  background-size: 2px 100%;\\n\",\n       \"  background-repeat: no-repeat;\\n\",\n       \"  background-position: center center;\\n\",\n       \"}\\n\",\n       \"\\n\",\n       \"/* Parallel-specific style estimator block */\\n\",\n       \"\\n\",\n       \"#sk-container-id-1 div.sk-parallel-item::after {\\n\",\n       \"  content: \\\"\\\";\\n\",\n       \"  width: 100%;\\n\",\n       \"  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\\n\",\n       \"  flex-grow: 1;\\n\",\n       \"}\\n\",\n       \"\\n\",\n       \"#sk-container-id-1 div.sk-parallel {\\n\",\n       \"  display: flex;\\n\",\n       \"  align-items: stretch;\\n\",\n       \"  justify-content: center;\\n\",\n       \"  background-color: var(--sklearn-color-background);\\n\",\n       \"  position: relative;\\n\",\n       \"}\\n\",\n       \"\\n\",\n       \"#sk-container-id-1 div.sk-parallel-item {\\n\",\n       \"  display: flex;\\n\",\n       \"  flex-direction: column;\\n\",\n       \"}\\n\",\n       \"\\n\",\n       \"#sk-container-id-1 div.sk-parallel-item:first-child::after {\\n\",\n       \"  align-self: flex-end;\\n\",\n       \"  width: 50%;\\n\",\n       \"}\\n\",\n       \"\\n\",\n       \"#sk-container-id-1 div.sk-parallel-item:last-child::after {\\n\",\n       \"  align-self: flex-start;\\n\",\n       \"  width: 50%;\\n\",\n       \"}\\n\",\n       \"\\n\",\n       \"#sk-container-id-1 div.sk-parallel-item:only-child::after {\\n\",\n       \"  width: 0;\\n\",\n       \"}\\n\",\n       \"\\n\",\n       \"/* Serial-specific style estimator block */\\n\",\n       \"\\n\",\n       \"#sk-container-id-1 div.sk-serial {\\n\",\n       \"  display: flex;\\n\",\n       \"  flex-direction: column;\\n\",\n       \"  align-items: center;\\n\",\n       \"  background-color: var(--sklearn-color-background);\\n\",\n       \"  padding-right: 1em;\\n\",\n       \"  padding-left: 1em;\\n\",\n       \"}\\n\",\n       \"\\n\",\n       \"\\n\",\n       \"/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\\n\",\n       \"clickable and can be expanded/collapsed.\\n\",\n       \"- Pipeline and ColumnTransformer use this feature and define the default style\\n\",\n       \"- Estimators will overwrite some part of the style using the `sk-estimator` class\\n\",\n       \"*/\\n\",\n       \"\\n\",\n       \"/* Pipeline and ColumnTransformer style (default) */\\n\",\n       \"\\n\",\n       \"#sk-container-id-1 div.sk-toggleable {\\n\",\n       \"  /* Default theme specific background. It is overwritten whether we have a\\n\",\n       \"  specific estimator or a Pipeline/ColumnTransformer */\\n\",\n       \"  background-color: var(--sklearn-color-background);\\n\",\n       \"}\\n\",\n       \"\\n\",\n       \"/* Toggleable label */\\n\",\n       \"#sk-container-id-1 label.sk-toggleable__label {\\n\",\n       \"  cursor: pointer;\\n\",\n       \"  display: flex;\\n\",\n       \"  width: 100%;\\n\",\n       \"  margin-bottom: 0;\\n\",\n       \"  padding: 0.5em;\\n\",\n       \"  box-sizing: border-box;\\n\",\n       \"  text-align: center;\\n\",\n       \"  align-items: start;\\n\",\n       \"  justify-content: space-between;\\n\",\n       \"  gap: 0.5em;\\n\",\n       \"}\\n\",\n       \"\\n\",\n       \"#sk-container-id-1 label.sk-toggleable__label .caption {\\n\",\n       \"  font-size: 0.6rem;\\n\",\n       \"  font-weight: lighter;\\n\",\n       \"  color: var(--sklearn-color-text-muted);\\n\",\n       \"}\\n\",\n       \"\\n\",\n       \"#sk-container-id-1 label.sk-toggleable__label-arrow:before {\\n\",\n       \"  /* Arrow on the left of the label */\\n\",\n       \"  content: \\\"▸\\\";\\n\",\n       \"  float: left;\\n\",\n       \"  margin-right: 0.25em;\\n\",\n       \"  color: var(--sklearn-color-icon);\\n\",\n       \"}\\n\",\n       \"\\n\",\n       \"#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {\\n\",\n       \"  color: var(--sklearn-color-text);\\n\",\n       \"}\\n\",\n       \"\\n\",\n       \"/* Toggleable content - dropdown */\\n\",\n       \"\\n\",\n       \"#sk-container-id-1 div.sk-toggleable__content {\\n\",\n       \"  max-height: 0;\\n\",\n       \"  max-width: 0;\\n\",\n       \"  overflow: hidden;\\n\",\n       \"  text-align: left;\\n\",\n       \"  /* unfitted */\\n\",\n       \"  background-color: var(--sklearn-color-unfitted-level-0);\\n\",\n       \"}\\n\",\n       \"\\n\",\n       \"#sk-container-id-1 div.sk-toggleable__content.fitted {\\n\",\n       \"  /* fitted */\\n\",\n       \"  background-color: var(--sklearn-color-fitted-level-0);\\n\",\n       \"}\\n\",\n       \"\\n\",\n       \"#sk-container-id-1 div.sk-toggleable__content pre {\\n\",\n       \"  margin: 0.2em;\\n\",\n       \"  border-radius: 0.25em;\\n\",\n       \"  color: var(--sklearn-color-text);\\n\",\n       \"  /* unfitted */\\n\",\n       \"  background-color: var(--sklearn-color-unfitted-level-0);\\n\",\n       \"}\\n\",\n       \"\\n\",\n       \"#sk-container-id-1 div.sk-toggleable__content.fitted pre {\\n\",\n       \"  /* unfitted */\\n\",\n       \"  background-color: var(--sklearn-color-fitted-level-0);\\n\",\n       \"}\\n\",\n       \"\\n\",\n       \"#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {\\n\",\n       \"  /* Expand drop-down */\\n\",\n       \"  max-height: 200px;\\n\",\n       \"  max-width: 100%;\\n\",\n       \"  overflow: auto;\\n\",\n       \"}\\n\",\n       \"\\n\",\n       \"#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\\n\",\n       \"  content: \\\"▾\\\";\\n\",\n       \"}\\n\",\n       \"\\n\",\n       \"/* Pipeline/ColumnTransformer-specific style */\\n\",\n       \"\\n\",\n       \"#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\\n\",\n       \"  color: var(--sklearn-color-text);\\n\",\n       \"  background-color: var(--sklearn-color-unfitted-level-2);\\n\",\n       \"}\\n\",\n       \"\\n\",\n       \"#sk-container-id-1 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\\n\",\n       \"  background-color: var(--sklearn-color-fitted-level-2);\\n\",\n       \"}\\n\",\n       \"\\n\",\n       \"/* Estimator-specific style */\\n\",\n       \"\\n\",\n       \"/* Colorize estimator box */\\n\",\n       \"#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\\n\",\n       \"  /* unfitted */\\n\",\n       \"  background-color: var(--sklearn-color-unfitted-level-2);\\n\",\n       \"}\\n\",\n       \"\\n\",\n       \"#sk-container-id-1 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\\n\",\n       \"  /* fitted */\\n\",\n       \"  background-color: var(--sklearn-color-fitted-level-2);\\n\",\n       \"}\\n\",\n       \"\\n\",\n       \"#sk-container-id-1 div.sk-label label.sk-toggleable__label,\\n\",\n       \"#sk-container-id-1 div.sk-label label {\\n\",\n       \"  /* The background is the default theme color */\\n\",\n       \"  color: var(--sklearn-color-text-on-default-background);\\n\",\n       \"}\\n\",\n       \"\\n\",\n       \"/* On hover, darken the color of the background */\\n\",\n       \"#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {\\n\",\n       \"  color: var(--sklearn-color-text);\\n\",\n       \"  background-color: var(--sklearn-color-unfitted-level-2);\\n\",\n       \"}\\n\",\n       \"\\n\",\n       \"/* Label box, darken color on hover, fitted */\\n\",\n       \"#sk-container-id-1 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\\n\",\n       \"  color: var(--sklearn-color-text);\\n\",\n       \"  background-color: var(--sklearn-color-fitted-level-2);\\n\",\n       \"}\\n\",\n       \"\\n\",\n       \"/* Estimator label */\\n\",\n       \"\\n\",\n       \"#sk-container-id-1 div.sk-label label {\\n\",\n       \"  font-family: monospace;\\n\",\n       \"  font-weight: bold;\\n\",\n       \"  display: inline-block;\\n\",\n       \"  line-height: 1.2em;\\n\",\n       \"}\\n\",\n       \"\\n\",\n       \"#sk-container-id-1 div.sk-label-container {\\n\",\n       \"  text-align: center;\\n\",\n       \"}\\n\",\n       \"\\n\",\n       \"/* Estimator-specific */\\n\",\n       \"#sk-container-id-1 div.sk-estimator {\\n\",\n       \"  font-family: monospace;\\n\",\n       \"  border: 1px dotted var(--sklearn-color-border-box);\\n\",\n       \"  border-radius: 0.25em;\\n\",\n       \"  box-sizing: border-box;\\n\",\n       \"  margin-bottom: 0.5em;\\n\",\n       \"  /* unfitted */\\n\",\n       \"  background-color: var(--sklearn-color-unfitted-level-0);\\n\",\n       \"}\\n\",\n       \"\\n\",\n       \"#sk-container-id-1 div.sk-estimator.fitted {\\n\",\n       \"  /* fitted */\\n\",\n       \"  background-color: var(--sklearn-color-fitted-level-0);\\n\",\n       \"}\\n\",\n       \"\\n\",\n       \"/* on hover */\\n\",\n       \"#sk-container-id-1 div.sk-estimator:hover {\\n\",\n       \"  /* unfitted */\\n\",\n       \"  background-color: var(--sklearn-color-unfitted-level-2);\\n\",\n       \"}\\n\",\n       \"\\n\",\n       \"#sk-container-id-1 div.sk-estimator.fitted:hover {\\n\",\n       \"  /* fitted */\\n\",\n       \"  background-color: var(--sklearn-color-fitted-level-2);\\n\",\n       \"}\\n\",\n       \"\\n\",\n       \"/* Specification for estimator info (e.g. \\\"i\\\" and \\\"?\\\") */\\n\",\n       \"\\n\",\n       \"/* Common style for \\\"i\\\" and \\\"?\\\" */\\n\",\n       \"\\n\",\n       \".sk-estimator-doc-link,\\n\",\n       \"a:link.sk-estimator-doc-link,\\n\",\n       \"a:visited.sk-estimator-doc-link {\\n\",\n       \"  float: right;\\n\",\n       \"  font-size: smaller;\\n\",\n       \"  line-height: 1em;\\n\",\n       \"  font-family: monospace;\\n\",\n       \"  background-color: var(--sklearn-color-background);\\n\",\n       \"  border-radius: 1em;\\n\",\n       \"  height: 1em;\\n\",\n       \"  width: 1em;\\n\",\n       \"  text-decoration: none !important;\\n\",\n       \"  margin-left: 0.5em;\\n\",\n       \"  text-align: center;\\n\",\n       \"  /* unfitted */\\n\",\n       \"  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\\n\",\n       \"  color: var(--sklearn-color-unfitted-level-1);\\n\",\n       \"}\\n\",\n       \"\\n\",\n       \".sk-estimator-doc-link.fitted,\\n\",\n       \"a:link.sk-estimator-doc-link.fitted,\\n\",\n       \"a:visited.sk-estimator-doc-link.fitted {\\n\",\n       \"  /* fitted */\\n\",\n       \"  border: var(--sklearn-color-fitted-level-1) 1pt solid;\\n\",\n       \"  color: var(--sklearn-color-fitted-level-1);\\n\",\n       \"}\\n\",\n       \"\\n\",\n       \"/* On hover */\\n\",\n       \"div.sk-estimator:hover .sk-estimator-doc-link:hover,\\n\",\n       \".sk-estimator-doc-link:hover,\\n\",\n       \"div.sk-label-container:hover .sk-estimator-doc-link:hover,\\n\",\n       \".sk-estimator-doc-link:hover {\\n\",\n       \"  /* unfitted */\\n\",\n       \"  background-color: var(--sklearn-color-unfitted-level-3);\\n\",\n       \"  color: var(--sklearn-color-background);\\n\",\n       \"  text-decoration: none;\\n\",\n       \"}\\n\",\n       \"\\n\",\n       \"div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\\n\",\n       \".sk-estimator-doc-link.fitted:hover,\\n\",\n       \"div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\\n\",\n       \".sk-estimator-doc-link.fitted:hover {\\n\",\n       \"  /* fitted */\\n\",\n       \"  background-color: var(--sklearn-color-fitted-level-3);\\n\",\n       \"  color: var(--sklearn-color-background);\\n\",\n       \"  text-decoration: none;\\n\",\n       \"}\\n\",\n       \"\\n\",\n       \"/* Span, style for the box shown on hovering the info icon */\\n\",\n       \".sk-estimator-doc-link span {\\n\",\n       \"  display: none;\\n\",\n       \"  z-index: 9999;\\n\",\n       \"  position: relative;\\n\",\n       \"  font-weight: normal;\\n\",\n       \"  right: .2ex;\\n\",\n       \"  padding: .5ex;\\n\",\n       \"  margin: .5ex;\\n\",\n       \"  width: min-content;\\n\",\n       \"  min-width: 20ex;\\n\",\n       \"  max-width: 50ex;\\n\",\n       \"  color: var(--sklearn-color-text);\\n\",\n       \"  box-shadow: 2pt 2pt 4pt #999;\\n\",\n       \"  /* unfitted */\\n\",\n       \"  background: var(--sklearn-color-unfitted-level-0);\\n\",\n       \"  border: .5pt solid var(--sklearn-color-unfitted-level-3);\\n\",\n       \"}\\n\",\n       \"\\n\",\n       \".sk-estimator-doc-link.fitted span {\\n\",\n       \"  /* fitted */\\n\",\n       \"  background: var(--sklearn-color-fitted-level-0);\\n\",\n       \"  border: var(--sklearn-color-fitted-level-3);\\n\",\n       \"}\\n\",\n       \"\\n\",\n       \".sk-estimator-doc-link:hover span {\\n\",\n       \"  display: block;\\n\",\n       \"}\\n\",\n       \"\\n\",\n       \"/* \\\"?\\\"-specific style due to the `<a>` HTML tag */\\n\",\n       \"\\n\",\n       \"#sk-container-id-1 a.estimator_doc_link {\\n\",\n       \"  float: right;\\n\",\n       \"  font-size: 1rem;\\n\",\n       \"  line-height: 1em;\\n\",\n       \"  font-family: monospace;\\n\",\n       \"  background-color: var(--sklearn-color-background);\\n\",\n       \"  border-radius: 1rem;\\n\",\n       \"  height: 1rem;\\n\",\n       \"  width: 1rem;\\n\",\n       \"  text-decoration: none;\\n\",\n       \"  /* unfitted */\\n\",\n       \"  color: var(--sklearn-color-unfitted-level-1);\\n\",\n       \"  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\\n\",\n       \"}\\n\",\n       \"\\n\",\n       \"#sk-container-id-1 a.estimator_doc_link.fitted {\\n\",\n       \"  /* fitted */\\n\",\n       \"  border: var(--sklearn-color-fitted-level-1) 1pt solid;\\n\",\n       \"  color: var(--sklearn-color-fitted-level-1);\\n\",\n       \"}\\n\",\n       \"\\n\",\n       \"/* On hover */\\n\",\n       \"#sk-container-id-1 a.estimator_doc_link:hover {\\n\",\n       \"  /* unfitted */\\n\",\n       \"  background-color: var(--sklearn-color-unfitted-level-3);\\n\",\n       \"  color: var(--sklearn-color-background);\\n\",\n       \"  text-decoration: none;\\n\",\n       \"}\\n\",\n       \"\\n\",\n       \"#sk-container-id-1 a.estimator_doc_link.fitted:hover {\\n\",\n       \"  /* fitted */\\n\",\n       \"  background-color: var(--sklearn-color-fitted-level-3);\\n\",\n       \"}\\n\",\n       \"</style><div id=\\\"sk-container-id-1\\\" class=\\\"sk-top-container\\\"><div class=\\\"sk-text-repr-fallback\\\"><pre>DecisionTreeClassifier(max_depth=3, random_state=20)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\\\"sk-container\\\" hidden><div class=\\\"sk-item\\\"><div class=\\\"sk-estimator fitted sk-toggleable\\\"><input class=\\\"sk-toggleable__control sk-hidden--visually\\\" id=\\\"sk-estimator-id-1\\\" type=\\\"checkbox\\\" checked><label for=\\\"sk-estimator-id-1\\\" class=\\\"sk-toggleable__label fitted sk-toggleable__label-arrow\\\"><div><div>DecisionTreeClassifier</div></div><div><a class=\\\"sk-estimator-doc-link fitted\\\" rel=\\\"noreferrer\\\" target=\\\"_blank\\\" href=\\\"https://scikit-learn.org/1.6/modules/generated/sklearn.tree.DecisionTreeClassifier.html\\\">?<span>Documentation for DecisionTreeClassifier</span></a><span class=\\\"sk-estimator-doc-link fitted\\\">i<span>Fitted</span></span></div></label><div class=\\\"sk-toggleable__content fitted\\\"><pre>DecisionTreeClassifier(max_depth=3, random_state=20)</pre></div> </div></div></div></div>\"\n      ]\n     },\n     \"execution_count\": 4,\n     \"metadata\": {},\n     \"output_type\": \"execute_result\"\n    }\n   ],\n   \"execution_count\": 4\n  },\n  {\n   \"metadata\": {},\n   \"cell_type\": \"markdown\",\n   \"source\": [\n    \"Visualizing the Decision Tree\\n\",\n    \" \\n\",\n    \" The decision tree below is used to decide whether a website is a phishing site or not.  \\n\",\n    \" **Instructions for an Internet Analyst:**  \\n\",\n    \" \\n\",\n    \" 1. Check `ssfinal_state`:\\n\",\n    \"    - If `ssfinal_state` ≤ 0.5: classify as **phishing site**.\\n\",\n    \"    - If `ssfinal_state` > 0.5: go to step 2.\\n\",\n    \" \\n\",\n    \" 2. Analyze `url_of_Anchor`:\\n\",\n    \"    - If `url_of_Anchor` ≤ -0.5: classify as **legitimate site**.\\n\",\n    \"    - If `url_of_Anchor` > -0.5: go to step 3.\\n\",\n    \" \\n\",\n    \" 3. Check `prefix_suffix`:\\n\",\n    \"    - If `prefix_suffix` = 1: classify as **phishing site**.\\n\",\n    \"    - If `prefix_suffix` = 0: classify as **legitimate site**.\\n\",\n    \" \\n\",\n    \" *(Make sure these thresholds match the actual splits in your tree. Adjust if needed.)*\\n\"\n   ],\n   \"id\": \"d870eea4bca41297\"\n  },\n  {\n   \"metadata\": {\n    \"ExecuteTime\": {\n     \"end_time\": \"2025-01-30T13:14:40.466492Z\",\n     \"start_time\": \"2025-01-30T13:14:40.224104Z\"\n    }\n   },\n   \"cell_type\": \"code\",\n   \"source\": [\n    \"from sklearn.tree import plot_tree\\n\",\n    \"\\n\",\n    \"fig = plt.figure(figsize=(10, 10))\\n\",\n    \"plot_tree(model, feature_names=x.columns, class_names=['Legit_site', 'phishing_site'], filled=True)\\n\",\n    \"plt.show()\"\n   ],\n   \"id\": \"e915d8366e97f1f4\",\n   \"outputs\": [\n    {\n     \"data\": {\n      \"text/plain\": [\n       \"<Figure size 1000x1000 with 1 Axes>\"\n      ],\n      \"image/png\": \"\"\n     },\n     \"metadata\": {},\n     \"output_type\": \"display_data\"\n    }\n   ],\n   \"execution_count\": 5\n  },\n  {\n   \"metadata\": {},\n   \"cell_type\": \"markdown\",\n   \"source\": [\n    \"\\n\",\n    \"### Ohjeet\\n\",\n    \"\\n\",\n    \"Tämä ohjeistus auttaa analyytikkoa tunnistamaan phishing-sivustot kolmen vaiheen kautta:\\n\",\n    \"\\n\",\n    \"1. **Lopullinen tila (ssfinal\\\\_state)**\\n\",\n    \"2. **Ankkurilinkkien analyysi (url\\\\_of\\\\_Anchor)**\\n\",\n    \"3. **Etuliite-jälkiliite-analyysi (prefix\\\\_suffix)**\\n\",\n    \"\\n\",\n    \"---\\n\",\n    \"\\n\",\n    \"### 1. Tarkista lopullinen tila\\n\",\n    \"\\n\",\n    \"- Jos ssfinal_state on enintään 0.5, verkkosivu on todennäköisesti phising-sivusto.\\n\",\n    \"- Jos sslfinal_state on suurempi kuin 0.5, siirry kohtaan 2.\\n\",\n    \"\\n\",\n    \"---\\n\",\n    \"\\n\",\n    \"### 2. Analysoi ankkurilinkit\\n\",\n    \"\\n\",\n    \"- Jos URL_of_Anchor on pienempi tai yhtäsuuri kuin -0.5, verkkosivu ei todennäköisesti ole phising-sivusto\\n\",\n    \"- Jos arvo on suurempi kuin -0.5, etene kohtaan 3\\n\",\n    \"\\n\",\n    \"---\\n\",\n    \"\\n\",\n    \"### 3. Tarkista etuliite-jälkiliite\\n\",\n    \"\\n\",\n    \"- Jos arvo on yhtä suuri kuin 1, verkkosivu on todennäköisesti phising-sivusto\\n\",\n    \"- Jos arvo on 0, sivusto ei todennäköisesti ole phising-sivusto.\\n\",\n    \"\\n\",\n    \"---\\n\"\n   ],\n   \"id\": \"ce3eb1e0a00ded6b\"\n  },\n  {\n   \"metadata\": {},\n   \"cell_type\": \"markdown\",\n   \"source\": \"# Evaluation metrics\",\n   \"id\": \"73421e85adbaab3c\"\n  },\n  {\n   \"metadata\": {},\n   \"cell_type\": \"markdown\",\n   \"source\": \"### Confusion matrix\",\n   \"id\": \"badb7a022c59dede\"\n  },\n  {\n   \"metadata\": {\n    \"ExecuteTime\": {\n     \"end_time\": \"2025-01-30T13:14:40.562892Z\",\n     \"start_time\": \"2025-01-30T13:14:40.483239Z\"\n    }\n   },\n   \"cell_type\": \"code\",\n   \"source\": [\n    \"from sklearn.metrics import confusion_matrix\\n\",\n    \"\\n\",\n    \"preds = model.predict(x_test)\\n\",\n    \"cm = confusion_matrix(y_test, preds, labels=[-1, 1])\\n\",\n    \"\\n\",\n    \"# Plot the confusion matrix\\n\",\n    \"plt.figure(figsize=(6, 4))\\n\",\n    \"sns.heatmap(cm, annot=True, fmt='d', cmap='Blues', xticklabels=['Legit', 'Phishing'], yticklabels=['Legit', 'Phishing'])\\n\",\n    \"plt.xlabel('Predicted')\\n\",\n    \"plt.ylabel('Actual')\\n\",\n    \"plt.title('Confusion Matrix')\\n\",\n    \"plt.show()\"\n   ],\n   \"id\": \"bfd00abaa957eeaa\",\n   \"outputs\": [\n    {\n     \"data\": {\n      \"text/plain\": [\n       \"<Figure size 600x400 with 2 Axes>\"\n      ],\n      \"image/png\": \"\"\n     },\n     \"metadata\": {},\n     \"output_type\": \"display_data\"\n    }\n   ],\n   \"execution_count\": 6\n  },\n  {\n   \"metadata\": {},\n   \"cell_type\": \"markdown\",\n   \"source\": \"# PART 2 Tehtävistä alkaa tästä:\",\n   \"id\": \"bdc1765519a5d7a2\"\n  },\n  {\n   \"metadata\": {\n    \"ExecuteTime\": {\n     \"end_time\": \"2025-01-30T13:17:24.609254Z\",\n     \"start_time\": \"2025-01-30T13:17:21.888360Z\"\n    }\n   },\n   \"cell_type\": \"code\",\n   \"source\": [\n    \"from sklearn.ensemble import RandomForestClassifier\\n\",\n    \"from sklearn.model_selection import cross_val_score\\n\",\n    \"from sklearn.metrics import classification_report, accuracy_score, confusion_matrix\\n\",\n    \"import seaborn as sns\\n\",\n    \"import matplotlib.pyplot as plt\\n\",\n    \"\\n\",\n    \"# Initialize the Random Forest model\\n\",\n    \"rf_model = RandomForestClassifier(n_estimators=100, random_state=42)\\n\",\n    \"\\n\",\n    \"# Perform 10-fold cross-validation\\n\",\n    \"cv_scores = cross_val_score(rf_model, x_train, y_train, cv=10)\\n\",\n    \"\\n\",\n    \"# Print the cross-validation scores\\n\",\n    \"print(\\\"Cross-validation scores:\\\", cv_scores)\\n\",\n    \"print(\\\"Mean cross-validation score:\\\", cv_scores.mean())\\n\",\n    \"\\n\",\n    \"# Train the Random Forest model on the entire training set\\n\",\n    \"rf_model.fit(x_train, y_train)\\n\",\n    \"\\n\",\n    \"# Make predictions\\n\",\n    \"y_pred = rf_model.predict(x_test)\\n\",\n    \"\\n\",\n    \"# Evaluate the model\\n\",\n    \"print(\\\"Accuracy:\\\", accuracy_score(y_test, y_pred))\\n\",\n    \"print(\\\"Classification Report:\\\\n\\\", classification_report(y_test, y_pred))\\n\",\n    \"\\n\",\n    \"# Confusion matrix\\n\",\n    \"cm = confusion_matrix(y_test, y_pred, labels=[-1, 1])\\n\",\n    \"plt.figure(figsize=(6, 4))\\n\",\n    \"sns.heatmap(cm, annot=True, fmt='d', cmap='Blues', xticklabels=['Legit', 'Phishing'], yticklabels=['Legit', 'Phishing'])\\n\",\n    \"plt.xlabel('Predicted')\\n\",\n    \"plt.ylabel('Actual')\\n\",\n    \"plt.title('Confusion Matrix')\\n\",\n    \"plt.show()\"\n   ],\n   \"id\": \"c8260597e0af1575\",\n   \"outputs\": [\n    {\n     \"name\": \"stdout\",\n     \"output_type\": \"stream\",\n     \"text\": [\n      \"Cross-validation scores: [0.97416021 0.96511628 0.97932817 0.97157623 0.9754522  0.9625323\\n\",\n      \" 0.97674419 0.97028424 0.97412678 0.95989651]\\n\",\n      \"Mean cross-validation score: 0.9709217084348707\\n\",\n      \"Accuracy: 0.966536026529997\\n\",\n      \"Classification Report:\\n\",\n      \"               precision    recall  f1-score   support\\n\",\n      \"\\n\",\n      \"          -1       0.98      0.95      0.96      1428\\n\",\n      \"           1       0.96      0.98      0.97      1889\\n\",\n      \"\\n\",\n      \"    accuracy                           0.97      3317\\n\",\n      \"   macro avg       0.97      0.96      0.97      3317\\n\",\n      \"weighted avg       0.97      0.97      0.97      3317\\n\",\n      \"\\n\"\n     ]\n    },\n    {\n     \"data\": {\n      \"text/plain\": [\n       \"<Figure size 600x400 with 2 Axes>\"\n      ],\n      \"image/png\": \"\"\n     },\n     \"metadata\": {},\n     \"output_type\": \"display_data\"\n    }\n   ],\n   \"execution_count\": 8\n  }\n ],\n \"metadata\": {\n  \"kernelspec\": {\n   \"display_name\": \"Python 3\",\n   \"language\": \"python\",\n   \"name\": \"python3\"\n  },\n  \"language_info\": {\n   \"codemirror_mode\": {\n    \"name\": \"ipython\",\n    \"version\": 2\n   },\n   \"file_extension\": \".py\",\n   \"mimetype\": \"text/x-python\",\n   \"name\": \"python\",\n   \"nbconvert_exporter\": \"python\",\n   \"pygments_lexer\": \"ipython2\",\n   \"version\": \"2.7.6\"\n  }\n },\n \"nbformat\": 4,\n \"nbformat_minor\": 5\n}\n
===================================================================
diff --git a/Decision_trees_and_Random_forests.ipynb b/Decision_trees_and_Random_forests.ipynb
--- a/Decision_trees_and_Random_forests.ipynb	(revision 9274d5f28325df18dd4057a2715a8236daac10a1)
+++ b/Decision_trees_and_Random_forests.ipynb	(date 1738653104767)
@@ -1,1212 +1,193 @@
-{
- "cells": [
-  {
-   "metadata": {},
-   "cell_type": "markdown",
-   "source": [
-    "Phishing Website Classification\n",
-    "\n",
-    " In this notebook, we aim to predict whether a website is a phishing site or not based on a set of easily obtainable features. We will:\n",
-    " \n",
-    " - Build a **Decision Tree** for a transparent, human-readable model.\n",
-    " - Build a **Random Forest** for improved predictive performance.\n",
-    " \n",
-    " We follow the **CRISP-DM process**:\n",
-    " 1. **Business Understanding:**  \n",
-    "    - Goal: Create an automated system to warn users about potential phishing sites.\n",
-    "    - Impact: Prevent users from falling victim to phishing scams.\n",
-    " \n",
-    " 2. **Data Understanding:**  \n",
-    "    - We use the Phishing Websites dataset from the UCI Repository.\n",
-    "    - The target variable `result` uses `1` for phishing sites and `-1` for legitimate sites.\n",
-    " \n",
-    " 3. **Data Preparation:**  \n",
-    "    - We load the dataset and split it into training and testing sets.\n",
-    " \n",
-    " 4. **Modeling:**  \n",
-    "    - **Part 1:** Decision Tree with maximum depth of 3.\n",
-    "    - **Part 2:** Random Forest with 100 estimators and cross-validation.\n",
-    " \n",
-    " 5. **Evaluation:**  \n",
-    "    - We will evaluate models using accuracy, confusion matrices, and a classification report.\n",
-    "  6. **Deployment:**  \n",
-    "   - For the Decision Tree, we provide clear instructions for an internet analyst to manually assess website legitimacy.\n",
-    "   - For the Random Forest, we discuss potential hyperparameter tuning and performance improvements.\n",
-    "\n",
-    "Let's begin by importing our libraries and loading the data.Part 1: Decision tree\n",
-    "\n",
-    "Your initial goal is to construct a small yet useful decision tree that predicts whether a website is a phishing site or not.\n",
-    "\n",
-    "The outcome should contain the following:\n",
-    "\n",
-    "An image of the final decision tree.\n",
-    "Evaluation metrics for the decision tree.\n",
-    "Written instructions for an internet analyst to manually make the decision of whether the website is likely to be a phishing site or not. The instructions must match one-to-one with your decision tree, and be written in a way that is understandable to an engineer who is aware of the basics of internet technologies."
-   ],
-   "id": "139ba1401f3d6edb"
-  },
-  {
-   "cell_type": "code",
-   "id": "initial_id",
-   "metadata": {
-    "collapsed": true,
-    "ExecuteTime": {
-     "end_time": "2025-01-30T13:14:40.040474Z",
-     "start_time": "2025-01-30T13:14:40.005421Z"
-    }
-   },
-   "source": [
-    "\n",
-    "import pandas as pd\n",
-    "from sklearn.preprocessing import StandardScaler\n",
-    "from sklearn.preprocessing import StandardScaler\n",
-    "from sklearn.model_selection import train_test_split\n",
-    "import seaborn as sns\n",
-    "import matplotlib.pyplot as plt\n",
-    "\n",
-    "from sklearn.tree import DecisionTreeClassifier\n",
-    "from sklearn.metrics import classification_report, accuracy_score\n",
-    "from sklearn import tree\n",
-    "import matplotlib.pyplot as plt\n",
-    "\n",
-    "\n",
-    "from ucimlrepo import fetch_ucirepo\n",
-    "\n",
-    "df = pd.read_csv('phishing_websites.csv')\n",
-    "\n",
-    "df.loc[:]"
-   ],
-   "outputs": [
-    {
-     "data": {
-      "text/plain": [
-       "       having_ip_address  url_length  shortining_service  having_at_symbol  \\\n",
-       "0                     -1           1                   1                 1   \n",
-       "1                      1           1                   1                 1   \n",
-       "2                      1           0                   1                 1   \n",
-       "3                      1           0                   1                 1   \n",
-       "4                      1           0                  -1                 1   \n",
-       "...                  ...         ...                 ...               ...   \n",
-       "11050                  1          -1                   1                -1   \n",
-       "11051                 -1           1                   1                -1   \n",
-       "11052                  1          -1                   1                 1   \n",
-       "11053                 -1          -1                   1                 1   \n",
-       "11054                 -1          -1                   1                 1   \n",
-       "\n",
-       "       double_slash_redirecting  prefix_suffix  having_sub_domain  \\\n",
-       "0                            -1             -1                 -1   \n",
-       "1                             1             -1                  0   \n",
-       "2                             1             -1                 -1   \n",
-       "3                             1             -1                 -1   \n",
-       "4                             1             -1                  1   \n",
-       "...                         ...            ...                ...   \n",
-       "11050                         1              1                  1   \n",
-       "11051                        -1             -1                  1   \n",
-       "11052                         1             -1                  1   \n",
-       "11053                         1             -1                 -1   \n",
-       "11054                         1             -1                 -1   \n",
-       "\n",
-       "       sslfinal_state  domain_registration_length  favicon  ...  popupwindow  \\\n",
-       "0                  -1                          -1        1  ...            1   \n",
-       "1                   1                          -1        1  ...            1   \n",
-       "2                  -1                          -1        1  ...            1   \n",
-       "3                  -1                           1        1  ...            1   \n",
-       "4                   1                          -1        1  ...           -1   \n",
-       "...               ...                         ...      ...  ...          ...   \n",
-       "11050               1                          -1       -1  ...           -1   \n",
-       "11051              -1                          -1       -1  ...           -1   \n",
-       "11052              -1                          -1        1  ...            1   \n",
-       "11053              -1                           1       -1  ...           -1   \n",
-       "11054              -1                           1        1  ...            1   \n",
-       "\n",
-       "       iframe  age_of_domain  dnsrecord  web_traffic  page_rank  google_index  \\\n",
-       "0           1             -1         -1           -1         -1             1   \n",
-       "1           1             -1         -1            0         -1             1   \n",
-       "2           1              1         -1            1         -1             1   \n",
-       "3           1             -1         -1            1         -1             1   \n",
-       "4           1             -1         -1            0         -1             1   \n",
-       "...       ...            ...        ...          ...        ...           ...   \n",
-       "11050      -1              1          1           -1         -1             1   \n",
-       "11051       1              1          1            1          1             1   \n",
-       "11052       1              1          1            1         -1             1   \n",
-       "11053       1              1          1            1         -1             1   \n",
-       "11054       1             -1          1           -1         -1            -1   \n",
-       "\n",
-       "       links_pointing_to_page  statistical_report  result  \n",
-       "0                           1                  -1      -1  \n",
-       "1                           1                   1      -1  \n",
-       "2                           0                  -1      -1  \n",
-       "3                          -1                   1      -1  \n",
-       "4                           1                   1       1  \n",
-       "...                       ...                 ...     ...  \n",
-       "11050                       1                   1       1  \n",
-       "11051                      -1                   1      -1  \n",
-       "11052                       0                   1      -1  \n",
-       "11053                       1                   1      -1  \n",
-       "11054                       1                  -1      -1  \n",
-       "\n",
-       "[11055 rows x 31 columns]"
-      ],
-      "text/html": [
-       "<div>\n",
-       "<style scoped>\n",
-       "    .dataframe tbody tr th:only-of-type {\n",
-       "        vertical-align: middle;\n",
-       "    }\n",
-       "\n",
-       "    .dataframe tbody tr th {\n",
-       "        vertical-align: top;\n",
-       "    }\n",
-       "\n",
-       "    .dataframe thead th {\n",
-       "        text-align: right;\n",
-       "    }\n",
-       "</style>\n",
-       "<table border=\"1\" class=\"dataframe\">\n",
-       "  <thead>\n",
-       "    <tr style=\"text-align: right;\">\n",
-       "      <th></th>\n",
-       "      <th>having_ip_address</th>\n",
-       "      <th>url_length</th>\n",
-       "      <th>shortining_service</th>\n",
-       "      <th>having_at_symbol</th>\n",
-       "      <th>double_slash_redirecting</th>\n",
-       "      <th>prefix_suffix</th>\n",
-       "      <th>having_sub_domain</th>\n",
-       "      <th>sslfinal_state</th>\n",
-       "      <th>domain_registration_length</th>\n",
-       "      <th>favicon</th>\n",
-       "      <th>...</th>\n",
-       "      <th>popupwindow</th>\n",
-       "      <th>iframe</th>\n",
-       "      <th>age_of_domain</th>\n",
-       "      <th>dnsrecord</th>\n",
-       "      <th>web_traffic</th>\n",
-       "      <th>page_rank</th>\n",
-       "      <th>google_index</th>\n",
-       "      <th>links_pointing_to_page</th>\n",
-       "      <th>statistical_report</th>\n",
-       "      <th>result</th>\n",
-       "    </tr>\n",
-       "  </thead>\n",
-       "  <tbody>\n",
-       "    <tr>\n",
-       "      <th>0</th>\n",
-       "      <td>-1</td>\n",
-       "      <td>1</td>\n",
-       "      <td>1</td>\n",
-       "      <td>1</td>\n",
-       "      <td>-1</td>\n",
-       "      <td>-1</td>\n",
-       "      <td>-1</td>\n",
-       "      <td>-1</td>\n",
-       "      <td>-1</td>\n",
-       "      <td>1</td>\n",
-       "      <td>...</td>\n",
-       "      <td>1</td>\n",
-       "      <td>1</td>\n",
-       "      <td>-1</td>\n",
-       "      <td>-1</td>\n",
-       "      <td>-1</td>\n",
-       "      <td>-1</td>\n",
-       "      <td>1</td>\n",
-       "      <td>1</td>\n",
-       "      <td>-1</td>\n",
-       "      <td>-1</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>1</th>\n",
-       "      <td>1</td>\n",
-       "      <td>1</td>\n",
-       "      <td>1</td>\n",
-       "      <td>1</td>\n",
-       "      <td>1</td>\n",
-       "      <td>-1</td>\n",
-       "      <td>0</td>\n",
-       "      <td>1</td>\n",
-       "      <td>-1</td>\n",
-       "      <td>1</td>\n",
-       "      <td>...</td>\n",
-       "      <td>1</td>\n",
-       "      <td>1</td>\n",
-       "      <td>-1</td>\n",
-       "      <td>-1</td>\n",
-       "      <td>0</td>\n",
-       "      <td>-1</td>\n",
-       "      <td>1</td>\n",
-       "      <td>1</td>\n",
-       "      <td>1</td>\n",
-       "      <td>-1</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>2</th>\n",
-       "      <td>1</td>\n",
-       "      <td>0</td>\n",
-       "      <td>1</td>\n",
-       "      <td>1</td>\n",
-       "      <td>1</td>\n",
-       "      <td>-1</td>\n",
-       "      <td>-1</td>\n",
-       "      <td>-1</td>\n",
-       "      <td>-1</td>\n",
-       "      <td>1</td>\n",
-       "      <td>...</td>\n",
-       "      <td>1</td>\n",
-       "      <td>1</td>\n",
-       "      <td>1</td>\n",
-       "      <td>-1</td>\n",
-       "      <td>1</td>\n",
-       "      <td>-1</td>\n",
-       "      <td>1</td>\n",
-       "      <td>0</td>\n",
-       "      <td>-1</td>\n",
-       "      <td>-1</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>3</th>\n",
-       "      <td>1</td>\n",
-       "      <td>0</td>\n",
-       "      <td>1</td>\n",
-       "      <td>1</td>\n",
-       "      <td>1</td>\n",
-       "      <td>-1</td>\n",
-       "      <td>-1</td>\n",
-       "      <td>-1</td>\n",
-       "      <td>1</td>\n",
-       "      <td>1</td>\n",
-       "      <td>...</td>\n",
-       "      <td>1</td>\n",
-       "      <td>1</td>\n",
-       "      <td>-1</td>\n",
-       "      <td>-1</td>\n",
-       "      <td>1</td>\n",
-       "      <td>-1</td>\n",
-       "      <td>1</td>\n",
-       "      <td>-1</td>\n",
-       "      <td>1</td>\n",
-       "      <td>-1</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>4</th>\n",
-       "      <td>1</td>\n",
-       "      <td>0</td>\n",
-       "      <td>-1</td>\n",
-       "      <td>1</td>\n",
-       "      <td>1</td>\n",
-       "      <td>-1</td>\n",
-       "      <td>1</td>\n",
-       "      <td>1</td>\n",
-       "      <td>-1</td>\n",
-       "      <td>1</td>\n",
-       "      <td>...</td>\n",
-       "      <td>-1</td>\n",
-       "      <td>1</td>\n",
-       "      <td>-1</td>\n",
-       "      <td>-1</td>\n",
-       "      <td>0</td>\n",
-       "      <td>-1</td>\n",
-       "      <td>1</td>\n",
-       "      <td>1</td>\n",
-       "      <td>1</td>\n",
-       "      <td>1</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>...</th>\n",
-       "      <td>...</td>\n",
-       "      <td>...</td>\n",
-       "      <td>...</td>\n",
-       "      <td>...</td>\n",
-       "      <td>...</td>\n",
-       "      <td>...</td>\n",
-       "      <td>...</td>\n",
-       "      <td>...</td>\n",
-       "      <td>...</td>\n",
-       "      <td>...</td>\n",
-       "      <td>...</td>\n",
-       "      <td>...</td>\n",
-       "      <td>...</td>\n",
-       "      <td>...</td>\n",
-       "      <td>...</td>\n",
-       "      <td>...</td>\n",
-       "      <td>...</td>\n",
-       "      <td>...</td>\n",
-       "      <td>...</td>\n",
-       "      <td>...</td>\n",
-       "      <td>...</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>11050</th>\n",
-       "      <td>1</td>\n",
-       "      <td>-1</td>\n",
-       "      <td>1</td>\n",
-       "      <td>-1</td>\n",
-       "      <td>1</td>\n",
-       "      <td>1</td>\n",
-       "      <td>1</td>\n",
-       "      <td>1</td>\n",
-       "      <td>-1</td>\n",
-       "      <td>-1</td>\n",
-       "      <td>...</td>\n",
-       "      <td>-1</td>\n",
-       "      <td>-1</td>\n",
-       "      <td>1</td>\n",
-       "      <td>1</td>\n",
-       "      <td>-1</td>\n",
-       "      <td>-1</td>\n",
-       "      <td>1</td>\n",
-       "      <td>1</td>\n",
-       "      <td>1</td>\n",
-       "      <td>1</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>11051</th>\n",
-       "      <td>-1</td>\n",
-       "      <td>1</td>\n",
-       "      <td>1</td>\n",
-       "      <td>-1</td>\n",
-       "      <td>-1</td>\n",
-       "      <td>-1</td>\n",
-       "      <td>1</td>\n",
-       "      <td>-1</td>\n",
-       "      <td>-1</td>\n",
-       "      <td>-1</td>\n",
-       "      <td>...</td>\n",
-       "      <td>-1</td>\n",
-       "      <td>1</td>\n",
-       "      <td>1</td>\n",
-       "      <td>1</td>\n",
-       "      <td>1</td>\n",
-       "      <td>1</td>\n",
-       "      <td>1</td>\n",
-       "      <td>-1</td>\n",
-       "      <td>1</td>\n",
-       "      <td>-1</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>11052</th>\n",
-       "      <td>1</td>\n",
-       "      <td>-1</td>\n",
-       "      <td>1</td>\n",
-       "      <td>1</td>\n",
-       "      <td>1</td>\n",
-       "      <td>-1</td>\n",
-       "      <td>1</td>\n",
-       "      <td>-1</td>\n",
-       "      <td>-1</td>\n",
-       "      <td>1</td>\n",
-       "      <td>...</td>\n",
-       "      <td>1</td>\n",
-       "      <td>1</td>\n",
-       "      <td>1</td>\n",
-       "      <td>1</td>\n",
-       "      <td>1</td>\n",
-       "      <td>-1</td>\n",
-       "      <td>1</td>\n",
-       "      <td>0</td>\n",
-       "      <td>1</td>\n",
-       "      <td>-1</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>11053</th>\n",
-       "      <td>-1</td>\n",
-       "      <td>-1</td>\n",
-       "      <td>1</td>\n",
-       "      <td>1</td>\n",
-       "      <td>1</td>\n",
-       "      <td>-1</td>\n",
-       "      <td>-1</td>\n",
-       "      <td>-1</td>\n",
-       "      <td>1</td>\n",
-       "      <td>-1</td>\n",
-       "      <td>...</td>\n",
-       "      <td>-1</td>\n",
-       "      <td>1</td>\n",
-       "      <td>1</td>\n",
-       "      <td>1</td>\n",
-       "      <td>1</td>\n",
-       "      <td>-1</td>\n",
-       "      <td>1</td>\n",
-       "      <td>1</td>\n",
-       "      <td>1</td>\n",
-       "      <td>-1</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>11054</th>\n",
-       "      <td>-1</td>\n",
-       "      <td>-1</td>\n",
-       "      <td>1</td>\n",
-       "      <td>1</td>\n",
-       "      <td>1</td>\n",
-       "      <td>-1</td>\n",
-       "      <td>-1</td>\n",
-       "      <td>-1</td>\n",
-       "      <td>1</td>\n",
-       "      <td>1</td>\n",
-       "      <td>...</td>\n",
-       "      <td>1</td>\n",
-       "      <td>1</td>\n",
-       "      <td>-1</td>\n",
-       "      <td>1</td>\n",
-       "      <td>-1</td>\n",
-       "      <td>-1</td>\n",
-       "      <td>-1</td>\n",
-       "      <td>1</td>\n",
-       "      <td>-1</td>\n",
-       "      <td>-1</td>\n",
-       "    </tr>\n",
-       "  </tbody>\n",
-       "</table>\n",
-       "<p>11055 rows × 31 columns</p>\n",
-       "</div>"
-      ]
-     },
-     "execution_count": 2,
-     "metadata": {},
-     "output_type": "execute_result"
-    }
-   ],
-   "execution_count": 2
-  },
-  {
-   "metadata": {},
-   "cell_type": "markdown",
-   "source": [
-    "Data Preparation\n",
-    " \n",
-    " We split the dataset into features (X) and the target (y). The target variable `result` uses:\n",
-    " - `1` for phishing sites\n",
-    " - `-1` for legitimate sites\n",
-    " Then we split into training (70%) and testing (30%) sets."
-   ],
-   "id": "e93449e9220381a3"
-  },
-  {
-   "metadata": {},
-   "cell_type": "markdown",
-   "source": "ESIMALLINNUS",
-   "id": "b67eb8e9c6a8b3bf"
-  },
-  {
-   "metadata": {
-    "ExecuteTime": {
-     "end_time": "2025-01-30T13:14:40.089413Z",
-     "start_time": "2025-01-30T13:14:40.082762Z"
-    }
-   },
-   "cell_type": "code",
-   "source": [
-    "\n",
-    "\n",
-    "x = df.drop('result', axis=1)\n",
-    "y = df['result']\n",
-    "\n",
-    "x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.3, random_state=42)\n",
-    "print(x_train.shape, x_test.shape, y_train.shape, y_test.shape)\n"
-   ],
-   "id": "59b4fc5a0be06a89",
-   "outputs": [
-    {
-     "name": "stdout",
-     "output_type": "stream",
-     "text": [
-      "(7738, 30) (3317, 30) (7738,) (3317,)\n"
-     ]
-    }
-   ],
-   "execution_count": 3
-  },
-  {
-   "metadata": {
-    "ExecuteTime": {
-     "end_time": "2025-01-30T13:14:40.136983Z",
-     "start_time": "2025-01-30T13:14:40.125979Z"
-    }
-   },
-   "cell_type": "code",
-   "source": [
-    "model = DecisionTreeClassifier(max_depth=3, random_state=20)\n",
-    "model.fit(x_train, y_train)"
-   ],
-   "id": "88a1f71ad87a57ef",
-   "outputs": [
-    {
-     "data": {
-      "text/plain": [
-       "DecisionTreeClassifier(max_depth=3, random_state=20)"
-      ],
-      "text/html": [
-       "<style>#sk-container-id-1 {\n",
-       "  /* Definition of color scheme common for light and dark mode */\n",
-       "  --sklearn-color-text: #000;\n",
-       "  --sklearn-color-text-muted: #666;\n",
-       "  --sklearn-color-line: gray;\n",
-       "  /* Definition of color scheme for unfitted estimators */\n",
-       "  --sklearn-color-unfitted-level-0: #fff5e6;\n",
-       "  --sklearn-color-unfitted-level-1: #f6e4d2;\n",
-       "  --sklearn-color-unfitted-level-2: #ffe0b3;\n",
-       "  --sklearn-color-unfitted-level-3: chocolate;\n",
-       "  /* Definition of color scheme for fitted estimators */\n",
-       "  --sklearn-color-fitted-level-0: #f0f8ff;\n",
-       "  --sklearn-color-fitted-level-1: #d4ebff;\n",
-       "  --sklearn-color-fitted-level-2: #b3dbfd;\n",
-       "  --sklearn-color-fitted-level-3: cornflowerblue;\n",
-       "\n",
-       "  /* Specific color for light theme */\n",
-       "  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
-       "  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n",
-       "  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
-       "  --sklearn-color-icon: #696969;\n",
-       "\n",
-       "  @media (prefers-color-scheme: dark) {\n",
-       "    /* Redefinition of color scheme for dark theme */\n",
-       "    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
-       "    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n",
-       "    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
-       "    --sklearn-color-icon: #878787;\n",
-       "  }\n",
-       "}\n",
-       "\n",
-       "#sk-container-id-1 {\n",
-       "  color: var(--sklearn-color-text);\n",
-       "}\n",
-       "\n",
-       "#sk-container-id-1 pre {\n",
-       "  padding: 0;\n",
-       "}\n",
-       "\n",
-       "#sk-container-id-1 input.sk-hidden--visually {\n",
-       "  border: 0;\n",
-       "  clip: rect(1px 1px 1px 1px);\n",
-       "  clip: rect(1px, 1px, 1px, 1px);\n",
-       "  height: 1px;\n",
-       "  margin: -1px;\n",
-       "  overflow: hidden;\n",
-       "  padding: 0;\n",
-       "  position: absolute;\n",
-       "  width: 1px;\n",
-       "}\n",
-       "\n",
-       "#sk-container-id-1 div.sk-dashed-wrapped {\n",
-       "  border: 1px dashed var(--sklearn-color-line);\n",
-       "  margin: 0 0.4em 0.5em 0.4em;\n",
-       "  box-sizing: border-box;\n",
-       "  padding-bottom: 0.4em;\n",
-       "  background-color: var(--sklearn-color-background);\n",
-       "}\n",
-       "\n",
-       "#sk-container-id-1 div.sk-container {\n",
-       "  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n",
-       "     but bootstrap.min.css set `[hidden] { display: none !important; }`\n",
-       "     so we also need the `!important` here to be able to override the\n",
-       "     default hidden behavior on the sphinx rendered scikit-learn.org.\n",
-       "     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n",
-       "  display: inline-block !important;\n",
-       "  position: relative;\n",
-       "}\n",
-       "\n",
-       "#sk-container-id-1 div.sk-text-repr-fallback {\n",
-       "  display: none;\n",
-       "}\n",
-       "\n",
-       "div.sk-parallel-item,\n",
-       "div.sk-serial,\n",
-       "div.sk-item {\n",
-       "  /* draw centered vertical line to link estimators */\n",
-       "  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n",
-       "  background-size: 2px 100%;\n",
-       "  background-repeat: no-repeat;\n",
-       "  background-position: center center;\n",
-       "}\n",
-       "\n",
-       "/* Parallel-specific style estimator block */\n",
-       "\n",
-       "#sk-container-id-1 div.sk-parallel-item::after {\n",
-       "  content: \"\";\n",
-       "  width: 100%;\n",
-       "  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n",
-       "  flex-grow: 1;\n",
-       "}\n",
-       "\n",
-       "#sk-container-id-1 div.sk-parallel {\n",
-       "  display: flex;\n",
-       "  align-items: stretch;\n",
-       "  justify-content: center;\n",
-       "  background-color: var(--sklearn-color-background);\n",
-       "  position: relative;\n",
-       "}\n",
-       "\n",
-       "#sk-container-id-1 div.sk-parallel-item {\n",
-       "  display: flex;\n",
-       "  flex-direction: column;\n",
-       "}\n",
-       "\n",
-       "#sk-container-id-1 div.sk-parallel-item:first-child::after {\n",
-       "  align-self: flex-end;\n",
-       "  width: 50%;\n",
-       "}\n",
-       "\n",
-       "#sk-container-id-1 div.sk-parallel-item:last-child::after {\n",
-       "  align-self: flex-start;\n",
-       "  width: 50%;\n",
-       "}\n",
-       "\n",
-       "#sk-container-id-1 div.sk-parallel-item:only-child::after {\n",
-       "  width: 0;\n",
-       "}\n",
-       "\n",
-       "/* Serial-specific style estimator block */\n",
-       "\n",
-       "#sk-container-id-1 div.sk-serial {\n",
-       "  display: flex;\n",
-       "  flex-direction: column;\n",
-       "  align-items: center;\n",
-       "  background-color: var(--sklearn-color-background);\n",
-       "  padding-right: 1em;\n",
-       "  padding-left: 1em;\n",
-       "}\n",
-       "\n",
-       "\n",
-       "/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n",
-       "clickable and can be expanded/collapsed.\n",
-       "- Pipeline and ColumnTransformer use this feature and define the default style\n",
-       "- Estimators will overwrite some part of the style using the `sk-estimator` class\n",
-       "*/\n",
-       "\n",
-       "/* Pipeline and ColumnTransformer style (default) */\n",
-       "\n",
-       "#sk-container-id-1 div.sk-toggleable {\n",
-       "  /* Default theme specific background. It is overwritten whether we have a\n",
-       "  specific estimator or a Pipeline/ColumnTransformer */\n",
-       "  background-color: var(--sklearn-color-background);\n",
-       "}\n",
-       "\n",
-       "/* Toggleable label */\n",
-       "#sk-container-id-1 label.sk-toggleable__label {\n",
-       "  cursor: pointer;\n",
-       "  display: flex;\n",
-       "  width: 100%;\n",
-       "  margin-bottom: 0;\n",
-       "  padding: 0.5em;\n",
-       "  box-sizing: border-box;\n",
-       "  text-align: center;\n",
-       "  align-items: start;\n",
-       "  justify-content: space-between;\n",
-       "  gap: 0.5em;\n",
-       "}\n",
-       "\n",
-       "#sk-container-id-1 label.sk-toggleable__label .caption {\n",
-       "  font-size: 0.6rem;\n",
-       "  font-weight: lighter;\n",
-       "  color: var(--sklearn-color-text-muted);\n",
-       "}\n",
-       "\n",
-       "#sk-container-id-1 label.sk-toggleable__label-arrow:before {\n",
-       "  /* Arrow on the left of the label */\n",
-       "  content: \"▸\";\n",
-       "  float: left;\n",
-       "  margin-right: 0.25em;\n",
-       "  color: var(--sklearn-color-icon);\n",
-       "}\n",
-       "\n",
-       "#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {\n",
-       "  color: var(--sklearn-color-text);\n",
-       "}\n",
-       "\n",
-       "/* Toggleable content - dropdown */\n",
-       "\n",
-       "#sk-container-id-1 div.sk-toggleable__content {\n",
-       "  max-height: 0;\n",
-       "  max-width: 0;\n",
-       "  overflow: hidden;\n",
-       "  text-align: left;\n",
-       "  /* unfitted */\n",
-       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
-       "}\n",
-       "\n",
-       "#sk-container-id-1 div.sk-toggleable__content.fitted {\n",
-       "  /* fitted */\n",
-       "  background-color: var(--sklearn-color-fitted-level-0);\n",
-       "}\n",
-       "\n",
-       "#sk-container-id-1 div.sk-toggleable__content pre {\n",
-       "  margin: 0.2em;\n",
-       "  border-radius: 0.25em;\n",
-       "  color: var(--sklearn-color-text);\n",
-       "  /* unfitted */\n",
-       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
-       "}\n",
-       "\n",
-       "#sk-container-id-1 div.sk-toggleable__content.fitted pre {\n",
-       "  /* unfitted */\n",
-       "  background-color: var(--sklearn-color-fitted-level-0);\n",
-       "}\n",
-       "\n",
-       "#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n",
-       "  /* Expand drop-down */\n",
-       "  max-height: 200px;\n",
-       "  max-width: 100%;\n",
-       "  overflow: auto;\n",
-       "}\n",
-       "\n",
-       "#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n",
-       "  content: \"▾\";\n",
-       "}\n",
-       "\n",
-       "/* Pipeline/ColumnTransformer-specific style */\n",
-       "\n",
-       "#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
-       "  color: var(--sklearn-color-text);\n",
-       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
-       "}\n",
-       "\n",
-       "#sk-container-id-1 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
-       "  background-color: var(--sklearn-color-fitted-level-2);\n",
-       "}\n",
-       "\n",
-       "/* Estimator-specific style */\n",
-       "\n",
-       "/* Colorize estimator box */\n",
-       "#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
-       "  /* unfitted */\n",
-       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
-       "}\n",
-       "\n",
-       "#sk-container-id-1 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
-       "  /* fitted */\n",
-       "  background-color: var(--sklearn-color-fitted-level-2);\n",
-       "}\n",
-       "\n",
-       "#sk-container-id-1 div.sk-label label.sk-toggleable__label,\n",
-       "#sk-container-id-1 div.sk-label label {\n",
-       "  /* The background is the default theme color */\n",
-       "  color: var(--sklearn-color-text-on-default-background);\n",
-       "}\n",
-       "\n",
-       "/* On hover, darken the color of the background */\n",
-       "#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {\n",
-       "  color: var(--sklearn-color-text);\n",
-       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
-       "}\n",
-       "\n",
-       "/* Label box, darken color on hover, fitted */\n",
-       "#sk-container-id-1 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n",
-       "  color: var(--sklearn-color-text);\n",
-       "  background-color: var(--sklearn-color-fitted-level-2);\n",
-       "}\n",
-       "\n",
-       "/* Estimator label */\n",
-       "\n",
-       "#sk-container-id-1 div.sk-label label {\n",
-       "  font-family: monospace;\n",
-       "  font-weight: bold;\n",
-       "  display: inline-block;\n",
-       "  line-height: 1.2em;\n",
-       "}\n",
-       "\n",
-       "#sk-container-id-1 div.sk-label-container {\n",
-       "  text-align: center;\n",
-       "}\n",
-       "\n",
-       "/* Estimator-specific */\n",
-       "#sk-container-id-1 div.sk-estimator {\n",
-       "  font-family: monospace;\n",
-       "  border: 1px dotted var(--sklearn-color-border-box);\n",
-       "  border-radius: 0.25em;\n",
-       "  box-sizing: border-box;\n",
-       "  margin-bottom: 0.5em;\n",
-       "  /* unfitted */\n",
-       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
-       "}\n",
-       "\n",
-       "#sk-container-id-1 div.sk-estimator.fitted {\n",
-       "  /* fitted */\n",
-       "  background-color: var(--sklearn-color-fitted-level-0);\n",
-       "}\n",
-       "\n",
-       "/* on hover */\n",
-       "#sk-container-id-1 div.sk-estimator:hover {\n",
-       "  /* unfitted */\n",
-       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
-       "}\n",
-       "\n",
-       "#sk-container-id-1 div.sk-estimator.fitted:hover {\n",
-       "  /* fitted */\n",
-       "  background-color: var(--sklearn-color-fitted-level-2);\n",
-       "}\n",
-       "\n",
-       "/* Specification for estimator info (e.g. \"i\" and \"?\") */\n",
-       "\n",
-       "/* Common style for \"i\" and \"?\" */\n",
-       "\n",
-       ".sk-estimator-doc-link,\n",
-       "a:link.sk-estimator-doc-link,\n",
-       "a:visited.sk-estimator-doc-link {\n",
-       "  float: right;\n",
-       "  font-size: smaller;\n",
-       "  line-height: 1em;\n",
-       "  font-family: monospace;\n",
-       "  background-color: var(--sklearn-color-background);\n",
-       "  border-radius: 1em;\n",
-       "  height: 1em;\n",
-       "  width: 1em;\n",
-       "  text-decoration: none !important;\n",
-       "  margin-left: 0.5em;\n",
-       "  text-align: center;\n",
-       "  /* unfitted */\n",
-       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
-       "  color: var(--sklearn-color-unfitted-level-1);\n",
-       "}\n",
-       "\n",
-       ".sk-estimator-doc-link.fitted,\n",
-       "a:link.sk-estimator-doc-link.fitted,\n",
-       "a:visited.sk-estimator-doc-link.fitted {\n",
-       "  /* fitted */\n",
-       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
-       "  color: var(--sklearn-color-fitted-level-1);\n",
-       "}\n",
-       "\n",
-       "/* On hover */\n",
-       "div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",
-       ".sk-estimator-doc-link:hover,\n",
-       "div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",
-       ".sk-estimator-doc-link:hover {\n",
-       "  /* unfitted */\n",
-       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
-       "  color: var(--sklearn-color-background);\n",
-       "  text-decoration: none;\n",
-       "}\n",
-       "\n",
-       "div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",
-       ".sk-estimator-doc-link.fitted:hover,\n",
-       "div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",
-       ".sk-estimator-doc-link.fitted:hover {\n",
-       "  /* fitted */\n",
-       "  background-color: var(--sklearn-color-fitted-level-3);\n",
-       "  color: var(--sklearn-color-background);\n",
-       "  text-decoration: none;\n",
-       "}\n",
-       "\n",
-       "/* Span, style for the box shown on hovering the info icon */\n",
-       ".sk-estimator-doc-link span {\n",
-       "  display: none;\n",
-       "  z-index: 9999;\n",
-       "  position: relative;\n",
-       "  font-weight: normal;\n",
-       "  right: .2ex;\n",
-       "  padding: .5ex;\n",
-       "  margin: .5ex;\n",
-       "  width: min-content;\n",
-       "  min-width: 20ex;\n",
-       "  max-width: 50ex;\n",
-       "  color: var(--sklearn-color-text);\n",
-       "  box-shadow: 2pt 2pt 4pt #999;\n",
-       "  /* unfitted */\n",
-       "  background: var(--sklearn-color-unfitted-level-0);\n",
-       "  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n",
-       "}\n",
-       "\n",
-       ".sk-estimator-doc-link.fitted span {\n",
-       "  /* fitted */\n",
-       "  background: var(--sklearn-color-fitted-level-0);\n",
-       "  border: var(--sklearn-color-fitted-level-3);\n",
-       "}\n",
-       "\n",
-       ".sk-estimator-doc-link:hover span {\n",
-       "  display: block;\n",
-       "}\n",
-       "\n",
-       "/* \"?\"-specific style due to the `<a>` HTML tag */\n",
-       "\n",
-       "#sk-container-id-1 a.estimator_doc_link {\n",
-       "  float: right;\n",
-       "  font-size: 1rem;\n",
-       "  line-height: 1em;\n",
-       "  font-family: monospace;\n",
-       "  background-color: var(--sklearn-color-background);\n",
-       "  border-radius: 1rem;\n",
-       "  height: 1rem;\n",
-       "  width: 1rem;\n",
-       "  text-decoration: none;\n",
-       "  /* unfitted */\n",
-       "  color: var(--sklearn-color-unfitted-level-1);\n",
-       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
-       "}\n",
-       "\n",
-       "#sk-container-id-1 a.estimator_doc_link.fitted {\n",
-       "  /* fitted */\n",
-       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
-       "  color: var(--sklearn-color-fitted-level-1);\n",
-       "}\n",
-       "\n",
-       "/* On hover */\n",
-       "#sk-container-id-1 a.estimator_doc_link:hover {\n",
-       "  /* unfitted */\n",
-       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
-       "  color: var(--sklearn-color-background);\n",
-       "  text-decoration: none;\n",
-       "}\n",
-       "\n",
-       "#sk-container-id-1 a.estimator_doc_link.fitted:hover {\n",
-       "  /* fitted */\n",
-       "  background-color: var(--sklearn-color-fitted-level-3);\n",
-       "}\n",
-       "</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>DecisionTreeClassifier(max_depth=3, random_state=20)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow\"><div><div>DecisionTreeClassifier</div></div><div><a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.6/modules/generated/sklearn.tree.DecisionTreeClassifier.html\">?<span>Documentation for DecisionTreeClassifier</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></div></label><div class=\"sk-toggleable__content fitted\"><pre>DecisionTreeClassifier(max_depth=3, random_state=20)</pre></div> </div></div></div></div>"
-      ]
-     },
-     "execution_count": 4,
-     "metadata": {},
-     "output_type": "execute_result"
-    }
-   ],
-   "execution_count": 4
-  },
-  {
-   "metadata": {},
-   "cell_type": "markdown",
-   "source": [
-    "Visualizing the Decision Tree\n",
-    " \n",
-    " The decision tree below is used to decide whether a website is a phishing site or not.  \n",
-    " **Instructions for an Internet Analyst:**  \n",
-    " \n",
-    " 1. Check `ssfinal_state`:\n",
-    "    - If `ssfinal_state` ≤ 0.5: classify as **phishing site**.\n",
-    "    - If `ssfinal_state` > 0.5: go to step 2.\n",
-    " \n",
-    " 2. Analyze `url_of_Anchor`:\n",
-    "    - If `url_of_Anchor` ≤ -0.5: classify as **legitimate site**.\n",
-    "    - If `url_of_Anchor` > -0.5: go to step 3.\n",
-    " \n",
-    " 3. Check `prefix_suffix`:\n",
-    "    - If `prefix_suffix` = 1: classify as **phishing site**.\n",
-    "    - If `prefix_suffix` = 0: classify as **legitimate site**.\n",
-    " \n",
-    " *(Make sure these thresholds match the actual splits in your tree. Adjust if needed.)*\n"
-   ],
-   "id": "d870eea4bca41297"
-  },
-  {
-   "metadata": {
-    "ExecuteTime": {
-     "end_time": "2025-01-30T13:14:40.466492Z",
-     "start_time": "2025-01-30T13:14:40.224104Z"
-    }
-   },
-   "cell_type": "code",
-   "source": [
-    "from sklearn.tree import plot_tree\n",
-    "\n",
-    "fig = plt.figure(figsize=(10, 10))\n",
-    "plot_tree(model, feature_names=x.columns, class_names=['Legit_site', 'phishing_site'], filled=True)\n",
-    "plt.show()"
-   ],
-   "id": "e915d8366e97f1f4",
-   "outputs": [
-    {
-     "data": {
-      "text/plain": [
-       "<Figure size 1000x1000 with 1 Axes>"
-      ],
-      "image/png": ""
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    }
-   ],
-   "execution_count": 5
-  },
-  {
-   "metadata": {},
-   "cell_type": "markdown",
-   "source": [
-    "\n",
-    "### Ohjeet\n",
-    "\n",
-    "Tämä ohjeistus auttaa analyytikkoa tunnistamaan phishing-sivustot kolmen vaiheen kautta:\n",
-    "\n",
-    "1. **Lopullinen tila (ssfinal\\_state)**\n",
-    "2. **Ankkurilinkkien analyysi (url\\_of\\_Anchor)**\n",
-    "3. **Etuliite-jälkiliite-analyysi (prefix\\_suffix)**\n",
-    "\n",
-    "---\n",
-    "\n",
-    "### 1. Tarkista lopullinen tila\n",
-    "\n",
-    "- Jos ssfinal_state on enintään 0.5, verkkosivu on todennäköisesti phising-sivusto.\n",
-    "- Jos sslfinal_state on suurempi kuin 0.5, siirry kohtaan 2.\n",
-    "\n",
-    "---\n",
-    "\n",
-    "### 2. Analysoi ankkurilinkit\n",
-    "\n",
-    "- Jos URL_of_Anchor on pienempi tai yhtäsuuri kuin -0.5, verkkosivu ei todennäköisesti ole phising-sivusto\n",
-    "- Jos arvo on suurempi kuin -0.5, etene kohtaan 3\n",
-    "\n",
-    "---\n",
-    "\n",
-    "### 3. Tarkista etuliite-jälkiliite\n",
-    "\n",
-    "- Jos arvo on yhtä suuri kuin 1, verkkosivu on todennäköisesti phising-sivusto\n",
-    "- Jos arvo on 0, sivusto ei todennäköisesti ole phising-sivusto.\n",
-    "\n",
-    "---\n"
-   ],
-   "id": "ce3eb1e0a00ded6b"
-  },
-  {
-   "metadata": {},
-   "cell_type": "markdown",
-   "source": "# Evaluation metrics",
-   "id": "73421e85adbaab3c"
-  },
-  {
-   "metadata": {},
-   "cell_type": "markdown",
-   "source": "### Confusion matrix",
-   "id": "badb7a022c59dede"
-  },
-  {
-   "metadata": {
-    "ExecuteTime": {
-     "end_time": "2025-01-30T13:14:40.562892Z",
-     "start_time": "2025-01-30T13:14:40.483239Z"
-    }
-   },
-   "cell_type": "code",
-   "source": [
-    "from sklearn.metrics import confusion_matrix\n",
-    "\n",
-    "preds = model.predict(x_test)\n",
-    "cm = confusion_matrix(y_test, preds, labels=[-1, 1])\n",
-    "\n",
-    "# Plot the confusion matrix\n",
-    "plt.figure(figsize=(6, 4))\n",
-    "sns.heatmap(cm, annot=True, fmt='d', cmap='Blues', xticklabels=['Legit', 'Phishing'], yticklabels=['Legit', 'Phishing'])\n",
-    "plt.xlabel('Predicted')\n",
-    "plt.ylabel('Actual')\n",
-    "plt.title('Confusion Matrix')\n",
-    "plt.show()"
-   ],
-   "id": "bfd00abaa957eeaa",
-   "outputs": [
-    {
-     "data": {
-      "text/plain": [
-       "<Figure size 600x400 with 2 Axes>"
-      ],
-      "image/png": ""
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    }
-   ],
-   "execution_count": 6
-  },
-  {
-   "metadata": {},
-   "cell_type": "markdown",
-   "source": "# PART 2 Tehtävistä alkaa tästä:",
-   "id": "bdc1765519a5d7a2"
-  },
-  {
-   "metadata": {
-    "ExecuteTime": {
-     "end_time": "2025-01-30T13:17:24.609254Z",
-     "start_time": "2025-01-30T13:17:21.888360Z"
-    }
-   },
-   "cell_type": "code",
-   "source": [
-    "from sklearn.ensemble import RandomForestClassifier\n",
-    "from sklearn.model_selection import cross_val_score\n",
-    "from sklearn.metrics import classification_report, accuracy_score, confusion_matrix\n",
-    "import seaborn as sns\n",
-    "import matplotlib.pyplot as plt\n",
-    "\n",
-    "# Initialize the Random Forest model\n",
-    "rf_model = RandomForestClassifier(n_estimators=100, random_state=42)\n",
-    "\n",
-    "# Perform 10-fold cross-validation\n",
-    "cv_scores = cross_val_score(rf_model, x_train, y_train, cv=10)\n",
-    "\n",
-    "# Print the cross-validation scores\n",
-    "print(\"Cross-validation scores:\", cv_scores)\n",
-    "print(\"Mean cross-validation score:\", cv_scores.mean())\n",
-    "\n",
-    "# Train the Random Forest model on the entire training set\n",
-    "rf_model.fit(x_train, y_train)\n",
-    "\n",
-    "# Make predictions\n",
-    "y_pred = rf_model.predict(x_test)\n",
-    "\n",
-    "# Evaluate the model\n",
-    "print(\"Accuracy:\", accuracy_score(y_test, y_pred))\n",
-    "print(\"Classification Report:\\n\", classification_report(y_test, y_pred))\n",
-    "\n",
-    "# Confusion matrix\n",
-    "cm = confusion_matrix(y_test, y_pred, labels=[-1, 1])\n",
-    "plt.figure(figsize=(6, 4))\n",
-    "sns.heatmap(cm, annot=True, fmt='d', cmap='Blues', xticklabels=['Legit', 'Phishing'], yticklabels=['Legit', 'Phishing'])\n",
-    "plt.xlabel('Predicted')\n",
-    "plt.ylabel('Actual')\n",
-    "plt.title('Confusion Matrix')\n",
-    "plt.show()"
-   ],
-   "id": "c8260597e0af1575",
-   "outputs": [
-    {
-     "name": "stdout",
-     "output_type": "stream",
-     "text": [
-      "Cross-validation scores: [0.97416021 0.96511628 0.97932817 0.97157623 0.9754522  0.9625323\n",
-      " 0.97674419 0.97028424 0.97412678 0.95989651]\n",
-      "Mean cross-validation score: 0.9709217084348707\n",
-      "Accuracy: 0.966536026529997\n",
-      "Classification Report:\n",
-      "               precision    recall  f1-score   support\n",
-      "\n",
-      "          -1       0.98      0.95      0.96      1428\n",
-      "           1       0.96      0.98      0.97      1889\n",
-      "\n",
-      "    accuracy                           0.97      3317\n",
-      "   macro avg       0.97      0.96      0.97      3317\n",
-      "weighted avg       0.97      0.97      0.97      3317\n",
-      "\n"
-     ]
-    },
-    {
-     "data": {
-      "text/plain": [
-       "<Figure size 600x400 with 2 Axes>"
-      ],
-      "image/png": ""
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    }
-   ],
-   "execution_count": 8
-  }
- ],
- "metadata": {
-  "kernelspec": {
-   "display_name": "Python 3",
-   "language": "python",
-   "name": "python3"
-  },
-  "language_info": {
-   "codemirror_mode": {
-    "name": "ipython",
-    "version": 2
-   },
-   "file_extension": ".py",
-   "mimetype": "text/x-python",
-   "name": "python",
-   "nbconvert_exporter": "python",
-   "pygments_lexer": "ipython2",
-   "version": "2.7.6"
-  }
- },
- "nbformat": 4,
- "nbformat_minor": 5
-}
+#%% md
+Phishing Website Classification
+
+ In this notebook, we aim to predict whether a website is a phishing site or not based on a set of easily obtainable features. We will:
+ 
+ - Build a **Decision Tree** for a transparent, human-readable model.
+ - Build a **Random Forest** for improved predictive performance.
+ 
+ We follow the **CRISP-DM process**:
+ 1. **Business Understanding:**  
+    - Goal: Create an automated system to warn users about potential phishing sites.
+    - Impact: Prevent users from falling victim to phishing scams.
+ 
+ 2. **Data Understanding:**  
+    - We use the Phishing Websites dataset from the UCI Repository.
+    - The target variable `result` uses `1` for phishing sites and `-1` for legitimate sites.
+ 
+ 3. **Data Preparation:**  
+    - We load the dataset and split it into training and testing sets.
+ 
+ 4. **Modeling:**  
+    - **Part 1:** Decision Tree with maximum depth of 3.
+    - **Part 2:** Random Forest with 100 estimators and cross-validation.
+ 
+ 5. **Evaluation:**  
+    - We will evaluate models using accuracy, confusion matrices, and a classification report.
+  6. **Deployment:**  
+   - For the Decision Tree, we provide clear instructions for an internet analyst to manually assess website legitimacy.
+   - For the Random Forest, we discuss potential hyperparameter tuning and performance improvements.
+
+Let's begin by importing our libraries and loading the data.Part 1: Decision tree
+
+Your initial goal is to construct a small yet useful decision tree that predicts whether a website is a phishing site or not.
+
+The outcome should contain the following:
+
+An image of the final decision tree.
+Evaluation metrics for the decision tree.
+Written instructions for an internet analyst to manually make the decision of whether the website is likely to be a phishing site or not. The instructions must match one-to-one with your decision tree, and be written in a way that is understandable to an engineer who is aware of the basics of internet technologies.
+#%%
+
+import pandas as pd
+from sklearn.preprocessing import StandardScaler
+from sklearn.preprocessing import StandardScaler
+from sklearn.model_selection import train_test_split
+import seaborn as sns
+import matplotlib.pyplot as plt
+
+from sklearn.tree import DecisionTreeClassifier
+from sklearn.metrics import classification_report, accuracy_score
+from sklearn import tree
+import matplotlib.pyplot as plt
+
+
+from ucimlrepo import fetch_ucirepo
+
+df = pd.read_csv('phishing_websites.csv')
+
+df.loc[:]
+#%% md
+Data Preparation
+ 
+ We split the dataset into features (X) and the target (y). The target variable `result` uses:
+ - `1` for phishing sites
+ - `-1` for legitimate sites
+ Then we split into training (70%) and testing (30%) sets.
+#%% md
+ESIMALLINNUS
+#%%
+
+
+x = df.drop('result', axis=1)
+y = df['result']
+
+x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.3, random_state=42)
+print(x_train.shape, x_test.shape, y_train.shape, y_test.shape)
+
+#%%
+model = DecisionTreeClassifier(max_depth=3, random_state=20)
+model.fit(x_train, y_train)
+#%% md
+Visualizing the Decision Tree
+ 
+ The decision tree below is used to decide whether a website is a phishing site or not.  
+ **Instructions for an Internet Analyst:**  
+ 
+ 1. Check `ssfinal_state`:
+    - If `ssfinal_state` ≤ 0.5: classify as **phishing site**.
+    - If `ssfinal_state` > 0.5: go to step 2.
+ 
+ 2. Analyze `url_of_Anchor`:
+    - If `url_of_Anchor` ≤ -0.5: classify as **legitimate site**.
+    - If `url_of_Anchor` > -0.5: go to step 3.
+ 
+ 3. Check `prefix_suffix`:
+    - If `prefix_suffix` = 1: classify as **phishing site**.
+    - If `prefix_suffix` = 0: classify as **legitimate site**.
+ 
+ *(Make sure these thresholds match the actual splits in your tree. Adjust if needed.)*
+
+#%%
+from sklearn.tree import plot_tree
+
+fig = plt.figure(figsize=(10, 10))
+plot_tree(model, feature_names=x.columns, class_names=['Legit_site', 'phishing_site'], filled=True)
+plt.show()
+#%% md
+
+### Ohjeet
+
+Tämä ohjeistus auttaa analyytikkoa tunnistamaan phishing-sivustot kolmen vaiheen kautta:
+
+1. **Lopullinen tila (ssfinal\_state)**
+2. **Ankkurilinkkien analyysi (url\_of\_Anchor)**
+3. **Etuliite-jälkiliite-analyysi (prefix\_suffix)**
+
+---
+
+### 1. Tarkista lopullinen tila
+
+- Jos ssfinal_state on enintään 0.5, verkkosivu on todennäköisesti phising-sivusto.
+- Jos sslfinal_state on suurempi kuin 0.5, siirry kohtaan 2.
+
+---
+
+### 2. Analysoi ankkurilinkit
+
+- Jos URL_of_Anchor on pienempi tai yhtäsuuri kuin -0.5, verkkosivu ei todennäköisesti ole phising-sivusto
+- Jos arvo on suurempi kuin -0.5, etene kohtaan 3
+
+---
+
+### 3. Tarkista etuliite-jälkiliite
+
+- Jos arvo on yhtä suuri kuin 1, verkkosivu on todennäköisesti phising-sivusto
+- Jos arvo on 0, sivusto ei todennäköisesti ole phising-sivusto.
+
+---
+
+#%% md
+# Evaluation metrics
+#%% md
+### Confusion matrix
+#%%
+from sklearn.metrics import confusion_matrix
+
+preds = model.predict(x_test)
+cm = confusion_matrix(y_test, preds, labels=[-1, 1])
+
+# Plot the confusion matrix
+plt.figure(figsize=(6, 4))
+sns.heatmap(cm, annot=True, fmt='d', cmap='Blues', xticklabels=['Legit', 'Phishing'], yticklabels=['Legit', 'Phishing'])
+plt.xlabel('Predicted')
+plt.ylabel('Actual')
+plt.title('Confusion Matrix')
+plt.show()
+#%% md
+# PART 2 Tehtävistä alkaa tästä:
+#%%
+from sklearn.ensemble import RandomForestClassifier
+from sklearn.model_selection import cross_val_score
+from sklearn.metrics import classification_report, accuracy_score, confusion_matrix
+import seaborn as sns
+import matplotlib.pyplot as plt
+
+# Initialize the Random Forest model
+rf_model = RandomForestClassifier(n_estimators=100, random_state=42)
+
+# Perform 10-fold cross-validation
+cv_scores = cross_val_score(rf_model, x_train, y_train, cv=10)
+
+# Print the cross-validation scores
+print("Cross-validation scores:", cv_scores)
+print("Mean cross-validation score:", cv_scores.mean())
+
+# Train the Random Forest model on the entire training set
+rf_model.fit(x_train, y_train)
+
+# Make predictions
+y_pred = rf_model.predict(x_test)
+
+# Evaluate the model
+print("Accuracy:", accuracy_score(y_test, y_pred))
+print("Classification Report:\n", classification_report(y_test, y_pred))
+
+# Confusion matrix
+cm = confusion_matrix(y_test, y_pred, labels=[-1, 1])
+plt.figure(figsize=(6, 4))
+sns.heatmap(cm, annot=True, fmt='d', cmap='Blues', xticklabels=['Legit', 'Phishing'], yticklabels=['Legit', 'Phishing'])
+plt.xlabel('Predicted')
+plt.ylabel('Actual')
+plt.title('Confusion Matrix')
+plt.show()
\ No newline at end of file
